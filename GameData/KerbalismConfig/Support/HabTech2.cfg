PARTUPGRADE:NEEDS[ProfileDefault]
{
	name = Upgrade-Slots_advScienceTech
	partIcon = kerbalism-chemicalplant
	techRequired = advScienceTech
	entryCost = 20000
	title = Life support and Chemical plant slot upgrade
	manufacturer = Lambda Aerospace
	description = Adds an additional configurable slot to a Lab/Hab.
}

PARTUPGRADE:NEEDS[FeatureRadiation]
{
	name = Upgrade-DestinyRDU
	partIcon = crewCabin
	techRequired = advScienceTech
	cost = 275300
	title = Add Sickbay to the Destiny module
	manufacturer = Vertigo Astroceutics
	description = Adds a radiation detoxication unit (RDU) to the Destiny laboratory module.
}

///COLUMBUS LAB LS - supports 2 crew///
@PART[ht2_moduleColumbus]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Columbus</color> :
}

@PART[ht2_moduleColumbus]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: fuel cell fuelcell water recycler waste processor anthraquinone soe:

	MODULE
	{
		name = ProcessController
		resource = _MonopropFuelCell
		title = Fuel cell
		capacity = #$/CrewCapacity$
		@capacity *= 5
	    valve_i = 2
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _FuelCell
		title = Fuel Cell
		capacity = #$/CrewCapacity$
	    valve_i = 1
		running = false
	}

	MODULE
	{
		name = Configure
		title = Fuel Cell
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = advElectrics
				slots = 2
			}
		}

		SETUP
		{
			name = Monoprop Oxygen Fuel Cell
			desc = Burns <b>MonoPropellant</b> and <b>Oxygen</b> gas, producing <b>Water</b> and <b>Nitrogen</b> gas as by-products.
			tech = survivability
			mass = 0.1
			cost = 1000

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MonopropFuelCell
			}
		}

		SETUP
		{
			name = Hydrogen Oxygen Fuel Cell
			desc = Burns <b>Hydrogen</b> gas and <b>Oxygen</b> gas, producing <b>Water</b> as a by-product.
			tech = advElectrics
			mass = 0.05
			cost = 2500
			valve_i = 1

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _FuelCell
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = Fuel Cell
		redundancy = Power Generation
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.1
		extra_mass = 0.05
	}

	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }

	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water recycler
		capacity = #$/CrewCapacity$
		running = false
	}

	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }
	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = Waste processor
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _Anthraquinone
		title = Anthraquinone process
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _SOE
		title = SOE
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = Configure
		title = Habitat recyclers
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = recycling
				slots = 2
			}
			UPGRADE
			{
				name__ = Upgrade-Slots_advScienceTech
				techRequired__ = advScienceTech
				slots = 3
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = Filter impurities out of <b>WasteWater</b>.
			tech = recycling
			mass = 0.05
			cost = 500


			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			tech = shortTermHabitation
			mass = 0.05
			cost = 500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}

			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Anthraquinone Process
			desc = Synthesize <b>Oxidizer</b> using a redox of <b>Oxygen</b> and <b>Hydrogen</b>.
			tech = advScienceTech
			mass = 0.1
			cost = 3500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Anthraquinone
			}
		}

		SETUP
		{
			name = Solid Oxide Electrolysis
			desc = Transform <b>CarbonDioxide</b> into <b>Oxygen</b> and <b>Shielding</b>.
			tech = experimentalScience
			mass = 0.15
			cost = 4500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SOE
			}
		}
	}

	// MODULE:NEEDS[FeatureReliability]
	// {
		// name = Reliability
		// type = ProcessController
		// title = Habitat recyclers
		// repair = Engineer
		// mtbf = 72576000
		// extra_cost = 0.1
		// extra_mass = 0.1
	// }
}

@PART[ht2_moduleColumbus]:NEEDS[HabTech2,FeatureHabitat]:AFTER[zzzKerbalismDefault]
{
	%MODULE[Habitat] // https://en.wikipedia.org/wiki/Columbus_%28ISS_module%29
	{
		%name = Habitat
		%volume = 108.164 // 4.477m diameter x 6.871m length
		@volume *= 0.85 // it's not a can like Atlas
		%surface = 128.124
	}
}

@PART[ht2_moduleCupola]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Cupola</color> :
}

@PART[ht2_moduleCupola]:NEEDS[HabTech2,FeatureComfort]:AFTER[KerbalismDefault]
{
	@tags ^= :$: comfort:

	MODULE
	{
		name = Comfort
		desc = This is great to look at the panorama.
		bonus = panorama
	}
}
// perhaps add a _SickbayTV to the cupola to simulate the "tranquilizing vortex" effect of being in the cupola?

///DESTINY LAB LS - supports 3 crew///
@PART[ht2_moduleDestiny]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Destiny</color> :
}

@PART[ht2_moduleDestiny]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: water recycler waste processor electrolysis sabatier:

	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }
	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }

	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water recycler
		capacity = #$/CrewCapacity$
		running = false
	}

	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }
	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = Waste processor
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _WaterElectrolysis
		title = Water electrolysis
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _Sabatier
		title = Sabatier process
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = Configure
		title = Habitat recyclers
		slots = 2

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = specializedElectrics
				slots = 3
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = Filter impurities out of <b>WasteWater</b>.
			tech = recycling
			mass = 0.05
			cost = 500


			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			tech = shortTermHabitation
			mass = 0.05
			cost = 500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}

			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Water Electrolysis
			desc = Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.
			tech = specializedElectrics
			mass = 0.05
			cost = 1500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterElectrolysis
			}
		}

		SETUP
		{
			name = Sabatier Process
			desc = <b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>LiquidFuel</b>.
			tech = specializedElectrics
			mass = 0.05
			cost = 1500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Sabatier
			}
		}
	}

	// MODULE:NEEDS[FeatureReliability]
	// {
		// name = Reliability
		// type = ProcessController
		// title = Habitat recyclers
		// repair = Engineer
		// mtbf = 72576000
		// extra_cost = 0.1
		// extra_mass = 0.1
	// }
}

@PART[ht2_moduleDestiny]:NEEDS[HabTech2,FeatureHabitat,FeatureRadiation]:AFTER[zzzKerbalismDefault]
{
	@description ^= :$: Can be upgraded to contain a Radiation Detoxication Unit (RDU) and an active shield afterwards.
	@tags ^= :$: sickbay rdu radiation detoxication:

	MODULE
	{
		name = Sickbay
		resource = _SickbayRDU
		title = RDU
		desc = The Radiation Detoxication Unit (RDU) uses EC and Oxygen to reduce the effects of radiation poisoning.
		mass = 0.15
		cost = 50000
		slots = 0
		// techRequired = advScienceTech

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-DestinyRDU
				techRequired__ = advScienceTech
				slots = 1
			}
		}
	}

	MODULE
	{
		name = Reliability
		type = Sickbay
		title = RDU
		redundancy = Life Support
		repair = Engineer
		mtbf = 72576000
		extra_cost = 0.5
		extra_mass = 0.1
	}

	MODULE
	{
		name = Emitter
		radiation = -0.0000005555 // -0.002 rad/h
		toggle = true
		ec_rate = 1.25
		active = e10
		slots = 0

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-DestinyActiveShield
				techRequired__ = experimentalScience
				slots = 1
			}
		}
	}

	MODULE
	{
		name = Reliability
		type = Emitter
		title = Shield
		repair = Engineer
		mtbf = 72576000
		extra_cost = 2.5
		extra_mass = 0.1
	}
}

@PART[ht2_moduleDestiny]:NEEDS[HabTech2,FeatureHabitat]:AFTER[zzzKerbalismDefault]
{
	%MODULE[Habitat] // https://en.wikipedia.org/wiki/Destiny_%28ISS_module%29
	{
		%name = Habitat
		%volume = 122.15 // 4.27m diameter x 8.53m length
		@volume *= 0.85 // it's not a can like Atlas
		%surface = 143.067
	}
}

///HARMONY NODE LS - supports 6 crew///
@PART[ht2_moduleHarmony]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Harmony (Node 2)</color> :
}

@PART[ht2_moduleHarmony]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: scrubber pressure:

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }

	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }
	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = Pressure control
		techRequired = survivability
		capacity = #$/CrewCapacity$
		@capacity *= 2.5
		running = true
	}

	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = Scrubber
		techRequired = enhancedSurvivability
		capacity = #$/CrewCapacity$
		@capacity *= 2.5
		running = true
	}

	// MODULE
	// {
		// name = Configure
		// title = Habitat atmosphere
		// slots = 2

		// SETUP
		// {
			// name = Scrubber
			// desc = A dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere.
			// tech = survivability
			// mass = 0.01
			// cost = 250

			// MODULE
			// {
				// type = ProcessController
				// id_field = resource
				// id_value = _Scrubber
			// }
		// }

		// SETUP
		// {
			// name = Pressure Control
			// desc = Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
			// tech = enhancedSurvivability
			// mass = 0.01
			// cost = 250

			// MODULE
			// {
				// type = ProcessController
				// id_field = resource
				// id_value = _PressureControl
			// }

			// RESOURCE
			// {
				// name = Nitrogen
				// amount = #$/CrewCapacity$
				// @amount *= 2.5
				// maxAmount = #$/CrewCapacity$
				// @maxAmount *= 2.5
				// @amount *= 500
				// @maxAmount *= 500
			// }
		// }
	// }

	// MODULE:NEEDS[FeatureReliability]
	// {
		// name = Reliability
		// type = ProcessController
		// title = Habitat atmosphere
		// repair = Engineer
		// mtbf = 72576000
		// extra_cost = 0.15
		// extra_mass = 0.1
	// }
}

// Harmony = ISS module Tranquility is not done yet, so Harmony gets a treadmill
@PART[ht2_moduleHarmony]:NEEDS[HabTech2,FeatureComfort]:AFTER[KerbalismDefault]
{
	@description ^= :$: Can be upgraded to contain a Treadmill with Vibration Isolation Stabilization System (TVIS).
	@tags ^= :$: exercise:

	MODULE:NEEDS[FeatureComfort]
	{
		name = Comfort
		desc = A treadmill designed to permit exercise in zero-g is included. The crew will love it.
		bonus = exercise
		slots = 0

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-HarmonyTreadmill
				techRequired__ = shortTermHabitation
				slots = 1
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = Comfort
		title = Treadmill
		repair = Engineer
		mtbf = 36288000
		extra_cost = 0.25
		extra_mass = 0.05
	}
}

@PART[ht2_moduleHarmony]:NEEDS[HabTech2,FeatureHabitat]:AFTER[zzzKerbalismDefault]
{
	%MODULE[Habitat] // https://en.wikipedia.org/wiki/Harmony_%28ISS_module%29
	{
		%name = Habitat
		%volume = 109.478 // 4.4m diameter x 7.2m length
		@volume *= 0.85 // it's not a can like Atlas
		%surface = 129.936
	}
}

///KIBO LOGISTICS LS///
@PART[ht2_moduleJEMlogistics]:NEEDS[HabTech2,CommunityResourcePack,!ProfileNone]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: container food water waste sewage:

	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[Water]:HAS[#tankType[HT2Water]]]
	{
		-SUBTYPE[Water]:HAS[#tankType[HT2Water]] { }
	}

	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = tankSwitch1
		switcherDescription = Container	Type
		baseVolume = 2000

		SUBTYPE
		{
			name = Food
			tankType = Food
			title = #KERBALISM_SupplyContainer_food // Food
		}

		SUBTYPE
		{
			name = Water
			tankType = Water
			title = #KERBALISM_SupplyContainer_water // Water
		}

		SUBTYPE
		{
			name = Supplies
			tankType = Supplies
			title = #KERBALISM_SupplyContainer_supplies // Supplies
		}

		SUBTYPE
		{
			name = Waste
			tankType = Waste
			title = #KERBALISM_SupplyContainer_waste // Waste
		}

		SUBTYPE
		{
			name = WasteWater
			tankType = WasteWater
			title = #KERBALISM_SupplyContainer_wet_waste // Wet Waste
		}

		SUBTYPE
		{
			name = Sewage
			tankType = Sewage
			title = #KERBALISM_SupplyContainer_sewage // Sewage
		}
	}
}

@PART[ht2_moduleJEMlogistics]:NEEDS[HabTech2,FeatureHabitat]:AFTER[zzzKerbalismDefault]
{
	%MODULE[Habitat] // https://en.wikipedia.org/wiki/Kibo_%28ISS_module%29#Experiment_logistics_module
	{
		%name = Habitat
		%volume = 63.7237 // 4.39m diameter x 4.21m length (pressurized section)
		@volume *= 0.9 // it's not a can like Atlas, but nearly
		%surface = 88.3351
	}
}

@PART[ht2_moduleJEMlogistics]:NEEDS[HabTech2]:AFTER[zzzKerbalismDefault]
{
	@description ^= :^:<color=green>Japanese Experiment Module (JEM-ELM)</color> :
	%CrewCapacity = 1

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }
	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
}

@PART[ht2_moduleJEMlogistics]:NEEDS[HabTech2,CommunityCategoryKit]:AFTER[zzzKerbalismDefault]
{
	%tags = #$tags$ cck-containers cck-lifesupport
}

@PART[ht2_moduleJEMlogistics]:NEEDS[HabTech2,CommunityCategoryKit,!FilterExtensions]:AFTER[zzzKerbalismDefault]
{
	%category = none
}

@PART[ht2_moduleJEMlogistics]:HAS[!MODULE[ModuleInventoryPart]]:NEEDS[HabTech2,SquadExpansion/Serenity]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: inventory:

	MODULE
	{
		name = ModuleInventoryPart
		InventorySlots = 12
	}
}

///KIBO LAB LS - supports 5 crew///
@PART[ht2_moduleKibo]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Japanese Experiment Module (JEM) aka. Kibo</color> :
}

@PART[ht2_moduleKibo]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: water recycler waste processor haber hydrazine production monoprop:

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }

	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water recycler
		capacity = #$/CrewCapacity$
		running = false
	}

	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }
	MODULE
	{
		name = ProcessController
		resource = _WasteProcessor
		title = Waste processor
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _Haber
		title = Haber process
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = ProcessController
		resource = _HydrazineProduction
		title = Hydrazine production
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = Configure
		title = Habitat recyclers
		slots = 2

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots_advScienceTech
				techRequired__ = advScienceTech
				slots = 3
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = Filter impurities out of <b>WasteWater</b>.
			tech = recycling
			mass = 0.05
			cost = 500


			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Waste Processor
			desc = Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
			tech = shortTermHabitation
			mass = 0.05
			cost = 500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteProcessor
			}

			RESOURCE
			{
				name = Waste
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 5
			}
		}

		SETUP
		{
			name = Haber Process
			desc = Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.
			tech = advScienceTech
			mass = 0.05
			cost = 2500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Haber
			}
		}

		SETUP
		{
			name = Hydrazine Production
			desc = <b>Oxidizer</b> and <b>Ammonia</b> react to produce <b>MonoPropellant</b>, <b>Oxygen</b> and <b>Water</b>.
			tech = advScienceTech
			mass = 0.05
			cost = 2500

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _HydrazineProduction
			}
		}
	}

	// MODULE:NEEDS[FeatureReliability]
	// {
		// name = Reliability
		// type = ProcessController
		// title = Habitat recyclers
		// repair = Engineer
		// mtbf = 72576000
		// extra_cost = 0.1
		// extra_mass = 0.1
	// }
}

@PART[ht2_moduleKibo]:NEEDS[HabTech2,FeatureHabitat]:AFTER[zzzKerbalismDefault]
{
	%MODULE[Habitat] // https://en.wikipedia.org/wiki/Kibo_%28ISS_module%29
	{
		%name = Habitat
		%volume = 169.375 // 4.39m diameter x 11.19m length
		@volume *= 0.85 // it's not a can like Atlas
		%surface = 184.6
	}
}

///LAB NODE LS - supports 6 crew///
@PART[ht2_moduleLabNode]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Docking Hub System (DHS) Node 4</color> :
}

@PART[ht2_moduleLabNode]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: scrubber pressure water recycler:

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }

	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = Scrubber
		capacity = #$/CrewCapacity$
		@capacity *= 3
		running = true
	}

	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }
	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = Pressure control
		capacity = #$/CrewCapacity$
		@capacity *= 3
		running = true
	}

	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	MODULE
	{
		name = ProcessController
		resource = _WaterRecycler
		title = Water recycler
		capacity = #$/CrewCapacity$
		@capacity *= 2
		running = false
	}

	MODULE
	{
		name = Configure
		title = Habitat atmosphere
		slots = 2

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = 3
			}
		}

		SETUP
		{
			name = Scrubber
			desc = A dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere.
			mass = 0.01
			cost = 250

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Scrubber
			}
		}

		SETUP
		{
			name = Pressure Control
			desc = Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
			tech = enhancedSurvivability
			mass = 0.01
			cost = 250

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _PressureControl
			}

			RESOURCE
			{
				name = Nitrogen
				amount = #$/CrewCapacity$
				@amount *= 3
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 3
				@amount *= 500
				@maxAmount *= 500
			}
		}

		SETUP
		{
			name = Water Recycler
			desc = Filter impurities out of <b>WasteWater</b>.
			tech = recycling
			mass = 0.05
			cost = 500


			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WaterRecycler
			}

			RESOURCE
			{
				name = WasteWater
				amount = 0
				maxAmount = #$/CrewCapacity$
				@maxAmount *= 2
				@maxAmount *= 5
			}
		}
	}

	// MODULE:NEEDS[FeatureReliability]
	// {
		// name = Reliability
		// type = ProcessController
		// title = Habitat atmosphere
		// repair = Engineer
		// mtbf = 72576000
		// extra_cost = 0.15
		// extra_mass = 0.1
	// }
}

@PART[ht2_moduleLabNode]:NEEDS[HabTech2,FeatureHabitat]:AFTER[zzzKerbalismDefault]
{
	%MODULE[Habitat] // https://en.wikipedia.org/wiki/Node_4 and https://www.revolvy.com/page/Node-4 (I needed to use Tor proxy from Germany)
	{
		%name = Habitat
		%volume = 179.448 // 4.57m diameter x 10.94m length - assumed double the length as Node 1 "Unity"
		@volume *= 0.85 // it's not a can like Atlas
		%surface = 189.872
	}
}

///Quest Airlock - provides just a pressure control and can be updated to have a scrubber
@PART[ht2_moduleQuest]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Quest (Joint Airlock)</color> :
}

@PART[ht2_moduleQuest]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: pressure scrubber:

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }

	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }
	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = Pressure control
		capacity = #$/CrewCapacity$
		running = true
	}

	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = Scrubber
		capacity = #$/CrewCapacity$
		running = false
	}

	MODULE
	{
		name = Configure
		title = Airlock
		slots = 1

		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = 2
			}
		}

		SETUP
		{
			name = Pressure Control
			desc = Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
			tech = enhancedSurvivability
			mass = 0.01
			cost = 250

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _PressureControl
			}

			RESOURCE
			{
				name = Nitrogen
				amount = #$/CrewCapacity$
				maxAmount #$/CrewCapacity$
				@amount *= 500
				@maxAmount *= 500
			}
		}

		SETUP
		{
			name = Scrubber
			desc = A dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere.
			tech = electronics
			mass = 0.01
			cost = 250

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Scrubber
			}
		}
	}

	// MODULE:NEEDS[FeatureReliability]
	// {
		// name = Reliability
		// type = ProcessController
		// title = Airlock
		// repair = Engineer
		// mtbf = 72576000
		// extra_cost = 0.15
		// extra_mass = 0.1
	// }
}

@PART[ht2_moduleQuest]:NEEDS[HabTech2,FeatureHabitat]:AFTER[zzzKerbalismDefault]
{
	%MODULE[Habitat] // https://en.wikipedia.org/wiki/Node_4
	{
		%name = Habitat
		%volume = 69.115 // 4m diameter x 5.5m length
		@volume *= 0.85 // it's not a can like Atlas
		%surface = 94.2478
	}
}

///UNITY NODE LS - supports 4 crew///
@PART[ht2_moduleUnity]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
{
	@description ^= :^:<color=green>Unity (Node 1)</color> :
}

@PART[ht2_moduleUnity]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@tags ^= :$: scrubber pressure:

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }

	-MODULE[ProcessController]:HAS[#resource[?PressureControl]] { }
	MODULE
	{
		name = ProcessController
		resource = _PressureControl
		title = Pressure control
		techRequired = survivability
		capacity = #$/CrewCapacity$
		@capacity *= 2
		running = true
	}

	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
	MODULE
	{
		name = ProcessController
		resource = _Scrubber
		title = Scrubber
		techRequired = enhancedSurvivability
		capacity = #$/CrewCapacity$
		@capacity *= 2
		running = true
	}

	// MODULE
	// {
		// name = Configure
		// title = Habitat atmosphere
		// slots = 2

		// SETUP
		// {
			// name = Scrubber
			// desc = A dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere.
			// tech = survivability
			// mass = 0.01
			// cost = 250

			// MODULE
			// {
				// type = ProcessController
				// id_field = resource
				// id_value = _Scrubber
			// }
		// }

		// SETUP
		// {
			// name = Pressure Control
			// desc = Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
			// tech = enhancedSurvivability
			// mass = 0.01
			// cost = 250

			// MODULE
			// {
				// type = ProcessController
				// id_field = resource
				// id_value = _PressureControl
			// }

			// RESOURCE
			// {
				// name = Nitrogen
				// amount = #$/CrewCapacity$
				// @amount *= 2
				// maxAmount = #$/CrewCapacity$
				// @maxAmount *= 2
				// @amount *= 500
				// @maxAmount *= 500
			// }
		// }
	// }

	// MODULE:NEEDS[FeatureReliability]
	// {
		// name = Reliability
		// type = ProcessController
		// title = Habitat atmosphere
		// repair = Engineer
		// mtbf = 72576000
		// extra_cost = 0.15
		// extra_mass = 0.1
	// }
}

@PART[ht2_moduleUnity]:NEEDS[HabTech2,FeatureHabitat]:AFTER[zzzKerbalismDefault]
{
	%MODULE[Habitat] // https://en.wikipedia.org/wiki/Unity_%28ISS_module%29
	{
		%name = Habitat
		%volume = 89.7242 // 4.57m diameter x 5.47m length
		@volume *= 0.85 // it's not a can like Atlas
		%surface = 111.339
	}
}

///MPLM LS///
@PART[ht2_MPLM]:NEEDS[HabTech2,CommunityResourcePack,!ProfileNone]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: food water waste sewage:

	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[Water]:HAS[#tankType[HT2Water]]]
	{
		-SUBTYPE[Water]:HAS[#tankType[HT2Water]] { }
	}
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = tankSwitch1
		switcherDescription = Container	Type
		baseVolume = 3000

		SUBTYPE
		{
			name = Food
			tankType = Food
			title = #KERBALISM_SupplyContainer_food // Food
		}
		SUBTYPE
		{
			name = Water
			tankType = Water
			title = #KERBALISM_SupplyContainer_water // Water
		}
		SUBTYPE
		{
			name = Supplies
			tankType = Supplies
			title = #KERBALISM_SupplyContainer_supplies // Supplies
		}
		SUBTYPE
		{
			name = Waste
			tankType = Waste
			title = #KERBALISM_SupplyContainer_waste // Waste
		}
		SUBTYPE
		{
			name = WasteWater
			tankType = WasteWater
			title = #KERBALISM_SupplyContainer_wet_waste // Wet Waste
		}
		SUBTYPE
		{
			name = Sewage
			tankType = Sewage
			title = #KERBALISM_SupplyContainer_sewage // Sewage
		}
	}
}

@PART[ht2_MPLM]:NEEDS[HabTech2,FeatureHabitat]:AFTER[zzzKerbalismDefault]
{
	%MODULE[Habitat] // https://en.wikipedia.org/wiki/Multi-Purpose_Logistics_Module
	{
		%name = Habitat
		%volume = 78.7342 // 4.57m diameter x 4.8m length (cylindrical part)
		@volume *= 0.9 // it's not a can like Atlas, but nearly
		%surface = 101.72
	}
}

@PART[ht2_MPLM]:NEEDS[HabTech2]:AFTER[zzzKerbalismDefault]
{
	@description ^= :^:<color=green>Multi-Purpose Logistics Module (MPLM)</color> :

	-MODULE[ProcessController]:HAS[#resource[?MonopropFuelCell]] { }
	-MODULE[ProcessController]:HAS[#resource[?WaterRecycler]] { }
	-MODULE[ProcessController]:HAS[#resource[?WasteProcessor]] { }
	-MODULE[ProcessController]:HAS[#resource[?Scrubber]] { }
}

@PART[ht2_MPLM]:NEEDS[HabTech2,CommunityCategoryKit]:AFTER[zzzKerbalismDefault]
{
	%tags = #$tags$ cck-containers cck-lifesupport
}

@PART[ht2_MPLM]:NEEDS[HabTech2,CommunityCategoryKit,!FilterExtensions]:AFTER[zzzKerbalismDefault]
{
	%category = none
}

@PART[ht2_MPLM]:HAS[!MODULE[ModuleInventoryPart]]:NEEDS[HabTech2,SquadExpansion/Serenity]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: inventory:

	MODULE
	{
		name = ModuleInventoryPart
		InventorySlots = 18
	}
}

@PART[ht2_*]:NEEDS[HabTech2,ProfileDefault]:AFTER[KerbalismDefault]
{
	@MODULE[ProcessController],*
	{
		@capacity *= 1.67
	}
}

-B9_TANK_TYPE[ht2_02]:NEEDS[HabTech2,CommunityResourcePack,!ProfileNone]:AFTER[zzzKerbalismDefault] { }

@PART[ht2_questPod]:NEEDS[HabTech2,CommunityResourcePack,!ProfileNone]:AFTER[zzzKerbalismDefault]
{
	@tags ^= :$: oxygen nitrogen hydrogen ammonia carbondioxide co2 xenon:

	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[Water]:HAS[#tankType[HT2Water]]]
	{
		-SUBTYPE[Water]:HAS[#tankType[HT2Water]] { }
	}
	@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[02]:HAS[#tankType[ht2_02]]]
	{
		-SUBTYPE[02]:HAS[#tankType[ht2_02]] { }
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[Oxygen]]
	{
		SUBTYPE
		{
			name = Oxygen
			tankType = Oxygen
			title = #KERBALISM_SupplyContainer_oxygen // Oxygen
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[Nitrogen]]
	{
		SUBTYPE
		{
			name = Nitrogen
			tankType = Nitrogen
			title = #KERBALISM_SupplyContainer_nitrogen // Nitrogen
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[Hydrogen]]
	{
		SUBTYPE
		{
			name = Hydrogen
			tankType = Hydrogen
			title = #KERBALISM_SupplyContainer_hydrogen // Hydrogen
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[Ammonia]]
	{
		SUBTYPE
		{
			name = Ammonia
			tankType = Ammonia
			title = #KERBALISM_SupplyContainer_ammonia // Ammonia
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[CarbonDioxide]]
	{
		SUBTYPE
		{
			name = CarbonDioxide
			tankType = CarbonDioxide
			title = #KERBALISM_SupplyContainer_co2 // CO2
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch],!SUBTYPE[XenonGas]]
	{
		SUBTYPE
		{
			name = XenonGas
			tankType = XenonGas
			title = #KERBALISM_SupplyContainer_xenon_gas // Xenon Gas
		}
	}
}

// @PART[ht2_questPod]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
// {
	// @description ^= :^:<color=green>unidentified</color> :
// }

@PART[ht2_questPod]:NEEDS[HabTech2,CommunityCategoryKit]:AFTER[zzzKerbalismDefault]
{
	%tags = #$tags$ cck-containers cck-lifesupport
}

@PART[ht2_questPod]:NEEDS[HabTech2,CommunityCategoryKit,!FilterExtensions]:AFTER[zzzKerbalismDefault]
{
	%category = none
}

// @PART[ht2_questRack]:NEEDS[HabTech2]:AFTER[KerbalismDefault]
// {
	// @description ^= :^:<color=green>unidentified</color> :
// }

@PART[ht2_*]:HAS[@MODULE[Configure]:HAS[#title[Pod]]]:NEEDS[HabTech2,ProfileDefault]:AFTER[zzzKerbalismDefault]
{
	-MODULE[Configure]:HAS[#title[Pod]] { }
}
