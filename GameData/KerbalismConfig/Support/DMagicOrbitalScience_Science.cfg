// Rewritten from scratch - Gotmachine - 10-2019:
// These experiments keep their vanilla module and behavior:
// - ASERT (asteroid experiment with some specific gameplay requirements)
// - Anomalous Signal Sensor (special feature: find anomalies)
// - ExoKerbol Core Drill (surface sample)
// - Surface Ablation Laser Light Imager (surface + asteroid data)
// - Seismic Sensor Pod / Impact Hammer (surface experiment with specific features)
// - XRD Surface Analyzer (surface + asteroid data)
// Rationale: those experiments either have specific constraints or features,
// and most of them make sense as a instant experiments.
// Also, we are missing a way to handle some of their animations and ground surface checks.
// Note: we patch all modules with the DM* wildcard with a matching experimentID in order to target both DMOS
// DMModuleScienceAnimate and other DM modules like the standalone DMModuleScienceAnimateGeneric, in order to
// alos patch parts from other mods that uses the DMOS experiments (US2, COATL ProbesPlus...)

// =========================================================
// DMOS "Probe science" folder
// =========================================================

// =========================================================
// Asteroid Sounding Experiment by Radiowave Transmission - part: dmASERT / module: DMAsteroidScanner / expID: dmAsteroidScan
// =========================================================
// UNPATCHED
// The ASERT is an asteroid-only experiment used to study the interior composition of asteroids.
// It must be paired with a second module placed on the opposite side of an asteroid.
// When two modules are properly positioned the experiment can be conducted with the science amount
// dependent on how much of the asteroid the signal passed through.

@EXPERIMENT_DEFINITION:HAS[#id[dmAsteroidScan]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	@dataScale = 30 // size in Mb
	@dataScale /= #$baseValue$
}

// =========================================================
// GORESat - part: dmGoreSat - module: DMModuleScienceAnimate
// =========================================================

@EXPERIMENT_DEFINITION:HAS[#id[dmRadiometerScan]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	KERBALISM_EXPERIMENT
	{
		DataSize = 7250
		SciencePoints = 12
		Description = The Global Orbital Radiance Experiment Satellite (GORESat) monitors the total light reflected rom a planet's surface across multiple wavelengths using four cavity radiometers.

		MODULE_DEFINITION
		{
			Duration = 21d
			RequiredEC = 0.15
			Requirements = SunAngleMin:5,SunAngleMax:60
		}
	}
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmRadiometerScan]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[Kerbalism]
{
  MODULE
  {
    name = ModuleKsmExperiment
    id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
    anim_deploy = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/animationName$
    allow_shrouded = False
  }

  !MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

// =========================================================
// Multi-Spectral Imaging Platform - part: dmImagingPlatform - module: DMModuleScienceAnimate
// =========================================================

@EXPERIMENT_DEFINITION:HAS[#id[dmImagingPlatform]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	KERBALISM_EXPERIMENT
	{
		DataSize = 5192
		SciencePoints = 8
		Description = Multi-spectral imaging platform, study the surface and composition of planets.

		MODULE_DEFINITION
		{
			Duration = 14d
			RequiredEC = 0.5
		}
	}
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmImagingPlatform]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
	MODULE
	{
	  name = ModuleKsmExperiment
	  id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
	  anim_deploy = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/animationName$
	  allow_shrouded = False
	}

	!MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

// =========================================================
// Magnetometer Boom - part: dmmagBoom - module: DMModuleScienceAnimate + DMMagBoomModule
// =========================================================

@EXPERIMENT_DEFINITION:HAS[#id[magScan]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	KERBALISM_EXPERIMENT
	{
		DataSize = 550
		SciencePoints = 5
		Description = Determine the magnitude and direction of planetary magnetic fields.

		MODULE_DEFINITION
		{
			Duration = 7d
			RequiredEC = 0.5
		}

  	VirtualBiome = NoBiome
		VirtualBiome = InnerBelt
		VirtualBiome = OuterBelt
		VirtualBiome = Magnetosphere
    VirtualBiome = Storm
    // note: not using a single space situation so the DMOS contracts are doable
    Situation = InSpaceLow@VirtualBiomes
    Situation = InSpaceHigh@VirtualBiomes
  }
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[magScan]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  @description = The magnetometer instruments are used to determine the magnitude and direction of planetary magnetic fields. The long boom separates these instruments from any interference caused by magnetic elements in the probe.

	MODULE
	{
	  name = ModuleKsmExperiment
	  id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
	  anim_deploy = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/animationName$
	  allow_shrouded = False
	}

	!MODULE[DMMagBoomModule] {} // DMOS own radiation fields code, useless for us
	!MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

// =========================================================
// RPWS Antenna - part: rpwsAnt - module: DMModuleScienceAnimate
// =========================================================
// The Radio and Plasma Wave Science instrument measures electrostatic and electromagnetic fields generated
// by the interaction of planetary magnetospheres and the interplanetary plasma medium.
// Deploy and use while in low to high orbit. Not for use during atmospheric flight or surface deployment.

@EXPERIMENT_DEFINITION:HAS[#id[rpwsScan]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
  KERBALISM_EXPERIMENT
  {
		DataSize = 1800
		SciencePoints = 9
		Description = Measures electrostatic and electromagnetic fields generated by the interaction of planetary magnetospheres and the interplanetary plasma medium.

		MODULE_DEFINITION
		{
			Duration = 30d
			RequiredEC = 0.3
		}

  	VirtualBiome = NoBiome
		VirtualBiome = InnerBelt
		VirtualBiome = OuterBelt
		VirtualBiome = Magnetosphere
    VirtualBiome = Storm
    // note: not using a single space situation so the DMOS contracts are doable
    Situation = InSpaceLow@VirtualBiomes
    Situation = InSpaceHigh@VirtualBiomes
  }
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[rpwsScan]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  MODULE
  {
    name = ModuleKsmExperiment
    id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
    anim_deploy = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/animationName$
    allow_shrouded = False
  }

  !MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

// =========================================================
// Orbital Telescope - part: dmscope - module: DMModuleScienceAnimate
// =========================================================

@EXPERIMENT_DEFINITION:HAS[#id[scopeScan]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	KERBALISM_EXPERIMENT
	{
		DataSize = 1100
		SciencePoints = 8

		MODULE_DEFINITION
		{
			Duration = 7d
			RequiredEC = 0.3
			Requirements = SunAngleMax:55
		}
	}
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[scopeScan]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  MODULE
  {
    name = ModuleKsmExperiment
    id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
    anim_deploy = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/animationName$
    allow_shrouded = False
  }

  !MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

// =========================================================
// Soil Moisture Sensor - part: dmSoilMoisture - module: DMSoilMoisture
// =========================================================
// This orbital sensor deploys a large L-band microwave detector comprised of 82 individual antenna elements.
// It can be used to study the water content of the upper soil layers and the salinity levels of large water features.
// Can only be used in low orbit. This instrument can also be used as a powerful communications antenna.

@EXPERIMENT_DEFINITION:HAS[#id[dmSoilMoisture]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	KERBALISM_EXPERIMENT
	{
		DataSize = 81920
		SciencePoints = 14
		Description = L-band microwave detector, study the water content of the upper soil layers and the salinity levels of large water features.

		MODULE_DEFINITION
		{
			Duration = 90d
			RequiredEC = 1.5
		}
	}
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmSoilMoisture]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  MODULE
  {
    name = ModuleKsmExperiment
    id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
    anim_deploy = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/animationName$
    allow_shrouded = False
  }

  !MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

// =========================================================
// Solar Particle Collector - part: dmSolarCollector - module: DMSolarCollector
// =========================================================

@EXPERIMENT_DEFINITION:HAS[#id[dmSolarParticles]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
  KERBALISM_EXPERIMENT
	{
		DataSize = 900
		SciencePoints = 20
		Description = This instrument is designed to collect and store several samples of solar particles.

		MODULE_DEFINITION
		{
			Duration = 300d
			RequiredEC = 0.001
			SampleCollecting = True
		}

    SampleMass = 0.001
    BodyAllowed = Suns
    VirtualBiome = NoBiome
    VirtualBiome = Interstellar
    VirtualBiome = Storm
    Situation = Space@VirtualBiomes
	}
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmSolarParticles]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  MODULE
  {
    name = ModuleKsmExperiment
    id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
    anim_deploy = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/animationName$
    anim_loop = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/loopingAnim$
    allow_shrouded = False
  }

  MODULE
  {
    name = ModuleKsmDrive
    experiment_id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
    sampleCapacity = 2
    fileCapacity = 0
  }

  !MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

// =========================================================
// DMOS "Rover science" folder
// =========================================================

// =========================================================
// Anomalous Signal Sensor - part: dmAnomScanner / module: DMAnomalyScanner / expid: AnomalyScan
// =========================================================
// UNPATCHED: very specific and quite usefull
// This small sensor is designed to scan for anomalous signals across several regions of the electromagnetic spectrum.
// You must be within 250m of the signal to obtain science results; use it from further out to obtain an estimate
// of the range and distance to the signal. For the best results, return the device to the KSC for further study.
@EXPERIMENT_DEFINITION:HAS[#id[AnomalyScan]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	@dataScale = 12 // size in Mb
	@dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
  {
    // vanilla DMOS AnomalyScan uses the SrfLanded and FlyingLow situations, we patch them so they are available in the science archive
    // See https://github.com/DMagic1/Orbital-Science/blob/51cbc3c6def1ed7e02a8bb42f819dac678f61983/Source/Part%20Modules/DMAnomalyScanner.cs#L588
    IsGeneratingSubjects = true
    IgnoreBodyRestrictions = true
    Situation = SrfLanded
    Situation = FlyingLow
  }
}

// =========================================================
// Submersible Oceanography and Bathymetry - part: dmBathymetry - module: DMBathymetry
// =========================================================
// Use this submersible science package to explore the uncharted depths of the oceans.
// Data can be collected above and below the depth threshold to maximize science gain.

@EXPERIMENT_DEFINITION:HAS[#id[dmbathymetryscan]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	KERBALISM_EXPERIMENT
	{
		DataSize = 800
		SciencePoints = 16
		Description = Submersible science package to explore the uncharted depths of the oceans.

		MODULE_DEFINITION
		{
			Duration = 5m
			RequiredEC = 0.6
			SampleCollecting = True
		}

	  SampleMass = 0.02
	}
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmbathymetryscan]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  @description = Use this submersible science package to explore the uncharted depths of the oceans.

  MODULE
  {
    name = ModuleKsmExperiment
    id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
    anim_deploy = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/animationName$
    allow_shrouded = False
  }

  !MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

// =========================================================
// ExoKerbol Core Drill - part: dmbioDrill - module: DMBioDrill
// =========================================================
// SEMI-PATCHED: Using the vanilla module because we don't have a surface check and there is no deploy animation
// and anyway we would do it as a very short experiment
// we only add a small drive to store the samples and change the xmitdatascalar to make it a sample
// The ExoKerbol Core Drill (XKCD) is designed to collect subsurface core samples to search for
// signs of biological activity on atmospheric planets. Three drill core samples can be stored
// in the incubation chambers for return. Check drill animator orientation with the preview in the VAB/SPH.
@EXPERIMENT_DEFINITION:HAS[#id[dmbiodrillscan]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	@baseValue = 6
	@dataScale = 400
	@dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
	{
    SampleMass = 0.005
    Situation = SrfLanded@Biomes
    BodyRequired = Atmospheric // match the vanilla DMOS requirement
	}
}

@PART[*]:HAS[@MODULE[DMBioDrill]:HAS[#experimentID[dmbiodrillscan]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  @MODULE[DMBioDrill]
  {
    @xmitDataScalar = 0.0 // make it a sample
  }

  MODULE
  {
    name = ModuleKsmDrive
    experiment_id = dmbiodrillscan
    sampleCapacity = 1
    dataCapacity = 0
  }
}

// =========================================================
// Dynamic Albedo of Neutrons - part: dmDAN - module: DMModuleScienceAnimate
// =========================================================
// NOTE: made this a (short) rover-only experiment by requiring a surface speed > 1.0
// The Dynamic Albedo of Neutrons instrument scans the upper layers of the surface
// to detect any hydrogen molecules within, specifically searching for water. Require moving over the surface to acquire data.

@EXPERIMENT_DEFINITION:HAS[#id[dmNAlbedoScan]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
  @title = Dynamic Albedo of Neutrons

	KERBALISM_EXPERIMENT
	{
		DataSize = 18
		SciencePoints = 6
		Description = Scans the upper layers of the surface to detect any hydrogen molecules within, specifically searching for water.

		MODULE_DEFINITION
		{
			Duration = 1m30s
			RequiredEC = 4.0
			Requirements = SurfaceSpeedMin:1
		}
	}
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmNAlbedoScan]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  MODULE
  {
    name = ModuleKsmExperiment
    id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
    anim_loop = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/animationName$
    allow_shrouded = False
  }

  !MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

// =========================================================
// Surface Ablation Laser Light Imager - part: dmsurfacelaser - module: DMModuleScienceAnimate - expID = dmlaserblastscan
// =========================================================
// UNPATCHED: can't do the surface contact check + would be near instant anyway  + can be used with asteroids
// Presenting the latest in laser based geological science. This device is capable of vaporizing surface samples
// to study their composition and expose hidden layers of the surface for further study.

@EXPERIMENT_DEFINITION:HAS[#id[dmlaserblastscan]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
  KERBALISM_EXPERIMENT
	{
		DataSize = 12
		SciencePoints = 6
		Description = Laser vaporizing surface samples to study their composition and expose hidden layers of the surface for further study

    Situation = SrfLanded@Biomes
	}
}

// =========================================================
// Micro Goo Containment Pod - part: dmRoverGoo
// =========================================================

@EXPERIMENT_DEFINITION:HAS[#id[mysteryGoo]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
  @KERBALISM_EXPERIMENT
	{
		MODULE_DEFINITION
		{
			name = microGoo
			Duration = 20m
			Samples = 2
			RequiredEC = 0.07
		}
	}
}

@PART[dmRoverGoo]:NEEDS[DMagicOrbitalScience,KerbalismScience]:AFTER[Kerbalism]
{
	@MODULE[ModuleKsmExperiment]:HAS[#id[mysteryGoo]]
	{
		id = microGoo
    anim_deploy = GooDeploy
    anim_loop = GooSample
	}

  !MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

// =========================================================
// SC-901 Science Micro - part: dmRoverMat
// =========================================================

@EXPERIMENT_DEFINITION:HAS[#id[mobileMaterialsLab]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
  @KERBALISM_EXPERIMENT
	{
		MODULE_DEFINITION
		{
			name = microMobileMaterialsLab
			Duration = 40m
			RequiredEC = 0.02
		}
	}
}

@PART[dmRoverMat]:NEEDS[DMagicOrbitalScience,KerbalismScience]:AFTER[Kerbalism]
{
	@MODULE[ModuleKsmExperiment]:HAS[#id[mobileMaterialsLab]]
	{
		id = microMobileMaterialsLab
    anim_deploy = MatBay
    anim_loop = MatSample
	}
  !MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

// =========================================================
// Seismic Sensor Pod / Seismic Impact Hammer (dmSeismicPod/dmSeismicHammer), expid = dmseismicHammer
// =========================================================
// UNPATCHED: quite specific, so don't do much about it.
// We just tweak the data size and limit how many times it can be run (since due to our data system, you could re-run it and get as much data as you want)
// The Seismic Sensor Pod is designed to be used in conjunction with the DMagic Seismic Impact Hammer.
// Place at least two pods at variable distances away from the impact hammer using the built-in decoupler mechanism
// (the pod has a very high impact tolerance) or by placing them on a separate vessel.
@EXPERIMENT_DEFINITION:HAS[#id[dmseismicHammer]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	@dataScale = 16 // size in Mb
	@dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[DMSeismicSensor]:HAS[#experimentID[dmseismicHammer]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  @MODULE[DMSeismicSensor]
  {
    %rerunnable = False
    %experimentLimit = 4 // 4 experiments available
    %resetLevel = 2 // resettable by a lvl 2 scientist
  }
}

// =========================================================
// XRD Surface Analyzer - part: dmXRay, module: DMXRayDiffract, expID: dmXRayDiffract
// =========================================================
// UNPATCHED: need a ground contact check + don't make much sense to make it take time + can be used with asteroids
// Just tweaking the data size.
// This instrument collects a small surface sample and determines its exact mineral composition through powder X-Ray diffraction.
// Because Kerbals don't trust what they can't see the chamber has been filled with a special scintillation gas to allow for easy
// visibility of the X-Ray beam. The drill must contact the surface to obtain a usable sample; perform adequate tests before launch!
@EXPERIMENT_DEFINITION:HAS[#id[dmXRayDiffract]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	@dataScale = 30 // size in Mb
	@dataScale /= #$baseValue$
}

// =========================================================
// DMOS "OversizeScience" folder
// =========================================================

// =========================================================
// Little Brother / Big Brother Surveillance Camera - parts: dmReconSmall/dmReconLarge - module: DMReconScope - expID: dmReconScan
// =========================================================
// This single-camera surveillance telescope features a continuously panning aperture that covers 110 degree bands of the surface.
// This model features two non-reusable film cannisters and has limited on-board processing capabilities.
// Use for obtaining detailed photos of the surface or spotting any unusual features.
// Can be used at up to five times the normal low orbit altitude.

@EXPERIMENT_DEFINITION:HAS[#id[dmReconScan]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
  KERBALISM_EXPERIMENT
  {
		DataSize = 40960
		SciencePoints = 40
		Description = Single-camera surveillance telescope

		MODULE_DEFINITION
		{
			name = dmReconScan
			Duration = 84d
			RequiredEC = 2.5
		}

		MODULE_DEFINITION
		{
			name = dmReconScanSmall
			Duration = 155d
			RequiredEC = 1.3
		}

    // replicate the vanilla DMOS biomes so the DMOS contracts are doable
    VirtualBiome = NorthernHemisphere
    VirtualBiome = SouthernHemisphere
    Situation = Space@VirtualBiomes
  }
}

@PART[*]:HAS[@MODULE[DMReconScope]:HAS[#experimentID[dmReconScan]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  @description = This camera surveillance telescope features continuously panning aperture that large bands of the surface.
  MODULE
  {
    name = ModuleKsmExperiment
    id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
    anim_deploy = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/animationName$
    anim_loop = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/loopingAnimName$
    allow_shrouded = False
		retractedDragCube = Default
		deployedDragCube = Default
  }

  !MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

@PART[dmReconSmall]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  @MODULE:HAS[#id[dmReconScan]]
  {
    id = dmReconScanSmall
  }
}

// =========================================================
// Undersize/Oversize Signals Intelligence Satellite - parts: dmSIGINT.Small/dmSIGINT.End - module: DMSIGINT - expID: dmSIGINT
// =========================================================
// A mildly oversized radio signals intelligence dish that can be used for listening in to every imaginable from of communication,
// discovering radio anomalies on a planet's surface, or just impressing your neighbor. Warning: Dish is FRAGILE;
// it is NOT for use in the atmosphere; CANNOT be retracted! Can be used at up to five times the normal low orbit altitude.
// This instrument can also be used as a powerful communications antenna.

@EXPERIMENT_DEFINITION:HAS[#id[dmSIGINT]]:NEEDS[DMagicOrbitalScience,KerbalismScience]:FOR[zzzKerbalism]
{
	KERBALISM_EXPERIMENT
	{
		DataSize = 32584
		SciencePoints = 25
		Description = Mildly oversized radio signals intelligence dish

		MODULE_DEFINITION
		{
			name = dmSIGINT
			Duration = 120d
			RequiredEC = 2.5
		}

		MODULE_DEFINITION
		{
			name = dmSIGINTSmall
			Duration = 320d
			RequiredEC = 0.95
		}

    // replicate the vanilla DMOS biomes so the DMOS contracts are doable
    VirtualBiome = NorthernHemisphere
    VirtualBiome = SouthernHemisphere
    Situation = Space@VirtualBiomes
  }
}

@PART[*]:HAS[@MODULE[DMSIGINT]:HAS[#experimentID[dmSIGINT]]]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  @description = A radio signals intelligence dish that can be used for listening in to every imaginable from of communication, discovering radio anomalies on a planet's surface, or just impressing your neighbor. Warning: Dish is FRAGILE; it is NOT for use in the atmosphere; This instrument can also be used as a powerful communications antenna.
  MODULE
  {
    name = ModuleKsmExperiment
    id = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/experimentID$
    anim_deploy = #$../MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]]/animationName$
    allow_shrouded = False
  }

  !MODULE:HAS[#experimentID,~name[ModuleKsmExperiment]] {}
}

@PART[dmSIGINT.Small]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  @MODULE:HAS[#id[dmSIGINT]]
  {
		id = dmSIGINTSmall
    retractedDragCube = Clean
    deployedDragCube = Deployed
  }
}

@PART[dmSIGINT.End]:NEEDS[DMagicOrbitalScience,KerbalismScience]
{
  @MODULE:HAS[#id[dmSIGINT]]
  {
    retractedDragCube = Clean
    deployedDragCube = Deployed
  }

  @MODULE[ModuleJettison],*
  {
		@allowShroudToggle = True
		@hideJettisonMenu = False
  }
}
