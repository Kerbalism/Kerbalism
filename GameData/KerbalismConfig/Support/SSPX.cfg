// Stock-alike Station Parts Expansion

// ============================================================================
// region Comfort providers
// ============================================================================
@PART[sspx-observation-25-1|sspx-cupola-375-1]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Comfort
		desc = The very best space observation experience.
		bonus = panorama
	}

	@tags ^= :$: comfort:
}

@PART[sspx-greenhouse-25-1|sspx-greenhouse-375-1]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
        MODULE
        {
                name = Comfort
                bonus = plants
                desc =  There's something inherently calming about an artificial slice of nature, kept alive only by the miracles of duct-tape and kerbal engineering. Let's hope the crew doesn't think too much about it.
        }
}
// end

// ============================================================================
// region Life Support
// ============================================================================
@PART[sspx-inflatable-cen*,sspx-expandable-cen*]:NEEDS[StationPartsExpansionRedux]:AFTER[Kerbalism]
{
	@CrewCapacity = #$MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
}

@PART[sspx-inflatable-hab*]:NEEDS[StationPartsExpansionRedux]:AFTER[Kerbalism]
{
	@CrewCapacity = #$MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
}
// end

// ============================================================================
// region Habitat (Inflatable)
// ============================================================================
@PART[sspx-inflatable-hab*]:NEEDS[StationPartsExpansionRedux,KerbalismLifeSupport]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Habitat
		inflate = Expand
		state = disabled
		animBackwards = True
	}

	!MODULE[ModuleDeployableHabitat] {} // Functionality is replaced by ModuleHabitat
}
// end

// ============================================================================
// region Habitat + Gravity Ring
// ============================================================================
@PART[sspx-inflatable-centrifuge-125-1]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Habitat
		state = disabled
		volume = 36.0
		surface = 85.0
	}

	MODULE
	{
		name = GravityRing
		ec_rate = 2.5
		animBackwards = True
		deploy = Expand
		rotate = SpinCenter
		deployed = False
		rotateIsTransform = True
		SpinRate = 42

		counterWeightRotate = SpinCenterCounter
		counterWeightSpinRate = -84.0
		counterWeightSpinAccelerationRate = 2.0
	}

	!MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
}

@PART[sspx-inflatable-centrifuge-125-2]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Habitat
		state = disabled
		volume = 19.0
		surface = 55.0
	}

	MODULE
	{
		name = GravityRing
		ec_rate = 2.5
		animBackwards = True
		deploy = Expand
		rotate = CompactSpinCentre
		deployed = False
		rotateIsTransform = True

		counterWeightRotate = CounterWeight
		counterWeightSpinRate = -70
		counterWeightSpinAccelerationRate = 2
	}

	!MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
}

@PART[sspx-inflatable-centrifuge-25-1]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Habitat
		state = disabled
		volume = 85
		surface = 180.0
	}

	MODULE
	{
		name = GravityRing
		ec_rate = 2.5
		animBackwards = True
		deploy = Expand
		rotate = B_Rotation
		rotateIsTransform = True
		SpinRate = 45
		SpinAccelerationRate = 1

		counterWeightRotate = 25mTorusCounterweight
		counterWeightSpinRate = -90
		counterWeightSpinAccelerationRate = 2
	}

	!MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
}

@PART[sspx-expandable-centrifuge-375-1]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Habitat
		state = disabled
		inflatableUsingRigidWalls = True
		volume = 260.0
		surface = 450.0
	}

	MODULE
	{
		name = GravityRing
		ec_rate = 2.5
		animBackwards = True
		deploy = CentrifugeCollapse
		rotate = B_Center
		deployed = False
		rotateIsTransform = True
		SpinRate = 35

		counterWeightRotate = Counterweight
		counterWeightSpinRate = -70
		counterWeightSpinAccelerationRate = 2
	}

	!MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
}

@PART[sspx-expandable-centrifuge-375-2]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Habitat
		state = disabled
		inflatableUsingRigidWalls = True
		volume = 110.0
		surface = 190.0
	}

	MODULE
	{
		name = GravityRing
		ec_rate = 2.5
		animBackwards = True
		deploy = Retract
		rotate = SpinCenter
		deployed = False
		rotateIsTransform = True
		SpinRate = 25

		counterWeightRotate = Counterweights
		counterWeightSpinRate = -70
		counterWeightSpinAccelerationRate = 2
	}

	!MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
}
// end

// ============================================================================
// region Comfort providers
// ============================================================================
@PART[sspx-observation-25-1|sspx-cupola-125-1|sspx-cupola-375-1]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
	MODULE:NEEDS[KerbalismStress]
	{
		name = Comfort
		desc = The very best space observation experience.
		bonus = panorama
	}

	@tags ^= :$: comfort:
}

@PART[sspx-habitation-375-1|sspx-habitation-375-2|sspx-habitation-375-3]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
	MODULE:NEEDS[KerbalismStress]
	{
		name = Comfort
		desc = It has included a rotation system that simulates gravity. The crew will love it.
		bonus = exercise
	}

	MODULE:NEEDS[KerbalismFailures]
	{
		name = Reliability
		type = Comfort
		title = Treadmill
		repair = Engineer
		mtbf = 36288000
		extra_cost = 0.25
		extra_mass = 0.05
	}
}

@PART[sspx-inflatable-hab-25-1|sspx-inflatable-hab-25-2]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
	MODULE:NEEDS[KerbalismStress]
	{
		name = Comfort
		desc = A treadmill designed to permit exercise in zero-g is included. The crew will love it.
		bonus = exercise
	}

	MODULE:NEEDS[KerbalismFailures]
	{
		name = Reliability
		type = Comfort
		title = Treadmill
		repair = Engineer
		mtbf = 36288000
		extra_cost = 0.25
		extra_mass = 0.05
	}
}

// Don't forget that those centrifuges have exercise areas too!
@PART[sspx-inflatable-centrifuge-25-1]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
	MODULE:NEEDS[KerbalismStress]
	{
		name = Comfort
		desc = Some low-g exercise equipment is included. The crew will love it.
		bonus = exercise
	}
}

// centrifuge has both confort (panorama & exercise)
@PART[sspx-expandable-centrifuge-375-*]:NEEDS[StationPartsExpansionRedux,KerbalismStress]:AFTER[Kerbalism]
{
	MODULE:NEEDS[KerbalismStress]
	{
		name = Comfort
		desc = Some low-g exercise equipment is included. The crew will love it.
		bonus = exercise
	}

	MODULE:NEEDS[KerbalismStress]
	{
		name = Comfort
		desc = The very best space observation experience.
		bonus = panorama
	}
}

// end

// ============================================================================
// region Recyclers
// ============================================================================
// TODO : this was using an active shield, use increased radiation shielding instead
// @PART[sspx-utility-125-1]:NEEDS[StationPartsExpansionRedux,KerbalismRadiation]:AFTER[zzzKerbalism]
// {

// }
// end

// ============================================================================
// region Greenhouses
// ============================================================================
@PART[sspx-greenhouse-25-1]:NEEDS[StationPartsExpansionRedux]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Greenhouse
		crop_resource = Food								// name of resource produced by harvests
		// Twice as effective as kerbalism-greenhouse part.
		// See https://forum.kerbalspaceprogram.com/index.php?/topic/172400-131145-kerbalism-v180/&page=32&tab=comments#comment-3446891 for details.

		// This greenhouse has 18 independent sections! It's 18 staged crops in rotation. Almost non-stop production, but each harvest is 18 times smaller.
		crop_size = 3.0625									// 18 times less harvest than 2x"kerbalism-greenhouse"
		crop_rate = 0.00000416664					 // but you can harvest 18 times more often due to independent sections!
		ec_rate = 5												 // 2x"kerbalism-greenhouse"
		light_tolerance = 400.0						 // minimum lighting flux required for growth, in W/m^2
		pressure_tolerance = 0.1						// minimum pressure required for growth, in sea level atmospheres
		radiation_tolerance = 0.000008333	 // maximum radiation allowed for growth in rad/s, considered after shielding is applied
		shutters = 25DoorsOpen							// animation to manipulate shutters
		animBackwards = True

		INPUT_RESOURCE
		{
			name = Ammonia
			rate = 0.00019140625							// 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = Water
			rate = 0.0000063802							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = KsmWasteAtmosphere						// Plants work on WasteAtmosphere and replace a scrubber, if not enough WasteAtmosphere exists then CO2 is used
			rate = 0.0024915995							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = CarbonDioxide							// Kerbals don't provide enough WasteAtmosphere for their required food production. If excess WasteAtmosphere is
																				// present then it will be used in place of CO2 injection
			rate = 0.00083053315							// 2x"kerbalism-greenhouse"
		}

		// Note. if there is a deficiency in the amount of WasteAtmosphere needed then the missing amount of WasteAtmosphere will be added to the
		// CarbonDioxide input and Vies Versa if not enough CarbonDioxide is present and there is extra WasteAtmosphere.
		// If there is not enough resources then the plants will suffer.

		OUTPUT_RESOURCE
		{
			name = Oxygen
			rate = 0.0034475965							 // 200% of oxygen required by 1 crew member
		}
	}

	RESOURCE
	{
		name = Ammonia
		amount = 544												// 2x"kerbalism-greenhouse"
		maxAmount = 544
	}

	RESOURCE
	{
		name = CarbonDioxide
		amount = 9000											 // 2x"kerbalism-greenhouse"
		maxAmount = 9000
	}

	// To support pressure control
	@MODULE[Configure]
	{
		@SETUP[Pressure?Control]
		{
			!RESOURCE[Nitrogen] {}
		}
	}

	RESOURCE
	{
		name = Nitrogen
		amount = 10000											// 1x"kerbalism-greenhouse" as it does not mess with crops
		maxAmount = 10000
	}

	RESOURCE
	{
		name = Water
		amount = 22												 // 2x"kerbalism-greenhouse"
		maxAmount = 22
	}

	!MODULE[ModuleAnimateGeneric] {}			// Greenhouse handles animation
}

@PART[sspx-greenhouse-375-1]:NEEDS[StationPartsExpansionRedux]:AFTER[Kerbalism]
{
	MODULE
	{
		name = Greenhouse

		crop_resource = Food								// name of resource produced by harvests
		// Twice as effective as kerbalism-greenhouse part.
		// See https://forum.kerbalspaceprogram.com/index.php?/topic/172400-131145-kerbalism-v180/&page=32&tab=comments#comment-3446891 for details.

		// Both growing "rings" of this greenhouse are unfortunately in the same section. No independent growing possible. (Different watering and lighting needs for different grow stages).
		crop_size = 55.125									// 2x kerbalism-greenhouse
		crop_rate = 0.00000023148					 // regular growth speed
		ec_rate = 5												 // 2x"kerbalism-greenhouse"
		light_tolerance = 400.0						 // minimum lighting flux required for growth, in W/m^2
		pressure_tolerance = 0.1						// minimum pressure required for growth, in sea level atmospheres
		radiation_tolerance = 0.000008333	 // maximum radiation allowed for growth in rad/s, considered after shielding is applied

		INPUT_RESOURCE
		{
			name = Ammonia
			rate = 0.00019140625							// 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = Water
			rate = 0.0000063802							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = KsmWasteAtmosphere						// Plants work on WasteAtmosphere and replace a scrubber, if not enough WasteAtmosphere exists then CO2 is used
			rate = 0.0024915995							 // 2x"kerbalism-greenhouse"
		}

		INPUT_RESOURCE
		{
			name = CarbonDioxide							// Kerbals don't provide enough WasteAtmosphere for their required food production. If excess WasteAtmosphere is
																				// present then it will be used in place of CO2 injection
			rate = 0.00083053315							// 2x"kerbalism-greenhouse"
		}

		// Note. if there is a deficiency in the amount of WasteAtmosphere needed then the missing amount of WasteAtmosphere will be added to the
		// CarbonDioxide input and Vies Versa if not enough CarbonDioxide is present and there is extra WasteAtmosphere.
		// If there is not enough resources then the plants will suffer.

		OUTPUT_RESOURCE
		{
			name = Oxygen
			rate = 0.0034475965							 // 200% of oxygen required by 1 crew member
		}
	}

	//	Concider those nice IVA tanks and closets for increasing current resource capacity. I won't touch em for now.
	RESOURCE
	{
		name = Ammonia
		amount = 544												// 2x"kerbalism-greenhouse"
		maxAmount = 544
	}

	RESOURCE
	{
		name = CarbonDioxide
		amount = 9000											 // 2x"kerbalism-greenhouse"
		maxAmount = 9000
	}

	// To support pressure control
	@MODULE[Configure]
	{
		@SETUP[Pressure?Control]
		{
		!RESOURCE[Nitrogen] {}
		}
	}

	RESOURCE
	{
		name = Nitrogen
		amount = 10000											// 1x"kerbalism-greenhouse" as it does not mess with crops
		maxAmount = 10000
	}

	RESOURCE
	{
		name = Water
		amount = 22												 // 2x"kerbalism-greenhouse"
		maxAmount = 22
	}
}

// ============================================================================
// region Containers
// ============================================================================
@PART[sspx-cargo-container*]:NEEDS[StationPartsExpansionRedux,CommunityResourcePack,!ProfileNone]:AFTER[zzzKerbalism]
{
	@MODULE[ModuleB9PartSwitch]:HAS[!SUBTYPE[Food]]
	{
		SUBTYPE
		{
			name = Food
			tankType = Food
			title = #KERBALISM_SupplyContainer_food // Food
			transform = SnacksDecal
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[!SUBTYPE[Supplies]]
	{
		SUBTYPE
		{
			name = Supplies
			tankType = Supplies
			title = #KERBALISM_SupplyContainer_supplies // Supplies
			transform = SuppliesDecal
		}
	}
	@MODULE[ModuleB9PartSwitch]:HAS[!SUBTYPE[Waste]]
	{
		SUBTYPE
		{
			name = Waste
			tankType = Waste
			title = #KERBALISM_SupplyContainer_waste // Waste
			transform = LifeSupportDecal
		}
	}
}
// end
