// ---------------------------------------------------------------------------
// define the tank types for B9PartSwitch
// ---------------------------------------------------------------------------

B9_TANK_TYPE
{
	name = Food
	tankMass =  0.00010627500
	tankCost = 0.15
	primaryColor = BrightOlive

	RESOURCE
	{
		name = Food
		unitsPerVolume = 1
	}
}

B9_TANK_TYPE
{
	name = Water
	tankMass =  0.00010627500
	tankCost = 0.15
	primaryColor = Azure

	RESOURCE
	{
		name = Water
		unitsPerVolume = 1
	}
}

B9_TANK_TYPE
{
	name = Supplies
	tankMass =  0.00010627500
	tankCost = 0.15
	primaryColor = BrightOlive
  secondaryColor = Azure

	RESOURCE
	{
		name = Food
		unitsPerVolume = 0.7221584
	}
	RESOURCE
	{
		name = Water
		unitsPerVolume = 0.2778416
	}
}

B9_TANK_TYPE
{
	name = Waste
	tankMass =  0.00010627500
	tankCost = 0.15
	primaryColor = BabyShitBrown

	RESOURCE
	{
		name = Waste
		unitsPerVolume = 1
		percentFilled = 0
	}
}

B9_TANK_TYPE
{
	name = WasteWater
	tankMass =  0.00010627500
	tankCost = 0.15
	primaryColor = EggShell

	RESOURCE
	{
		name = WasteWater
		unitsPerVolume = 1
		percentFilled = 0
	}
}

B9_TANK_TYPE
{
	name = Sewage
	tankMass =  0.00010627500
	tankCost = 0.15
	primaryColor = BabyShitBrown
	secondaryColor = EggShell

	RESOURCE
	{
		name = Waste
		unitsPerVolume = 0.4946378
		percentFilled = 0
	}
	RESOURCE
	{
		name = WasteWater
		unitsPerVolume = 0.5053622
		percentFilled = 0
	}
}

B9_TANK_TYPE
{
	name = Oxygen
	tankMass =  0.00010627500
	tankCost = 0.15
	primaryColor = AquaBlue

	RESOURCE
	{
		name = Oxygen
		unitsPerVolume = 200
	}
}

B9_TANK_TYPE
{
	name = Nitrogen
	tankMass =  0.00010627500
	tankCost = 0.15
	primaryColor = BlueyGrey

	RESOURCE
	{
		name = Nitrogen
		unitsPerVolume = 180
	}
}

B9_TANK_TYPE
{
	name = Hydrogen
	tankMass =  0.00010627500
	tankCost = 0.18
	primaryColor = Dandelion

	RESOURCE
	{
		name = Hydrogen
		unitsPerVolume = 700
	}
}

B9_TANK_TYPE
{
	name = Ammonia
	tankMass =  0.00010627500
	tankCost = 0.15
	primaryColor = EmeraldGreen

	RESOURCE
	{
		name = Ammonia
		unitsPerVolume = 35
	}
}

B9_TANK_TYPE
{
	name = CarbonDioxide
	tankMass =  0.00010627500
	tankCost = 0.15
	primaryColor = LightMauve

	RESOURCE
	{
		name = CarbonDioxide
		unitsPerVolume = 60
	}
}

B9_TANK_TYPE
{
	name = XenonGas
	tankMass =  0.00010627500
	tankCost = 0.25
  primaryColor = Manilla

	RESOURCE
	{
		name = XenonGas
		unitsPerVolume = 85
		// see https://www.cobham.com/mission-systems/composite-pressure-solutions/space-systems/xenon-propellant-tank-datasheet/
	}
}

// ---------------------------------------------------------------------------
// Add supply switches to all containers that
// have KerbalismContainerType = Supplies
// ---------------------------------------------------------------------------

@PART[*]:HAS[#KerbalismContainerType[Supplies]]:NEEDS[B9PartSwitch,ProfileDefault]:AFTER[KerbalismDefault]
{
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = supplySwitch
		switcherDescription = #kerbalism-part-contents // Contents

		SUBTYPE
		{
			name = Supplies
			title = #KERBALISM_SupplyContainer_supplies // Supplies
			tankType = Supplies
			descriptionSummary = #KERBALISM_SupplyContainer_desc // Store a balanced supply of <b>Food</b> and <b>Water</b>.
		}
		SUBTYPE
		{
			name = Food
			title = #KERBALISM_SupplyContainer_food // Food
			tankType = Food
		}
		SUBTYPE
		{
			name = Water
			title = #KERBALISM_SupplyContainer_water // Water
			tankType = Water
		}
		SUBTYPE
		{
			name = Sewage
			title = #KERBALISM_SupplyContainer_sewage // Sewage
			tankType = Sewage
			descriptionSummary = #KERBALISM_SupplyContainer_desc2 // Store solid and liquid organic <b>Waste</b>.
		}
		SUBTYPE
		{
			name = Waste
			title = #KERBALISM_SupplyContainer_waste // Waste
			tankType = Waste
		}
		SUBTYPE
		{
			name = WasteWater
			title = #KERBALISM_SupplyContainer_wet_waste // Wet Waste
			tankType = WasteWater
		}
	}
}

// ---------------------------------------------------------------------------
// Add pressurized switches to all containers that have
// KerbalismContainerType = Pressurized
// ---------------------------------------------------------------------------

@PART[*]:HAS[#KerbalismContainerType[Pressurized]]:NEEDS[B9PartSwitch,ProfileDefault]:AFTER[KerbalismDefault]
{
  MODULE
  {
    name = ModuleB9PartSwitch
    moduleID = pressurizedSwitch
    switcherDescription = #kerbalism-part-contents // Contents

    SUBTYPE
    {
      name = Oxygen
      title = #KERBALISM_SupplyContainer_oxygen // Oxygen
      tankType = Oxygen

			descriptionSummary = #KERBALISM_PressurizedTank_desc // Store pressurized <b>Oxygen</b> gas @ 200 bar.
    }
    SUBTYPE
    {
      name = Nitrogen
      title = #KERBALISM_SupplyContainer_nitrogen // Nitrogen
      tankType = Nitrogen

			descriptionSummary = #KERBALISM_PressurizedTank_desc2 // Store pressurized <b>Nitrogen</b> gas @ 180 bar.
    }
    SUBTYPE
    {
      name = Hydrogen
      title = #KERBALISM_SupplyContainer_hydrogen // Hydrogen
      tankType = Hydrogen

			descriptionSummary = #KERBALISM_PressurizedTank_desc3 // Store pressurized <b>Hydrogen</b> gas @ 700 bar.
    }
    SUBTYPE
    {
      name = Ammonia
      title = #KERBALISM_SupplyContainer_ammonia // Ammonia
      tankType = Ammonia

			descriptionSummary = #KERBALISM_PressurizedTank_desc4 // Store pressurized <b>Ammonia</b> gas @ 35 bar.
    }
    SUBTYPE
    {
      name = CarbonDioxide
      title = #KERBALISM_SupplyContainer_co2 // CO2
      tankType = CarbonDioxide

			descriptionSummary = #KERBALISM_PressurizedTank_desc5 // Store pressurized <b>Carbon dioxide</b> gas @ 60 bar.
    }
    SUBTYPE
    {
      name = XenonGas
      title = #KERBALISM_SupplyContainer_xenon_gas // Xenon Gas
      tankType = XenonGas

			// tech = ionPropulsion
			descriptionSummary = #KERBALISM_PressurizedTank_desc6 // Store pressurized <b>Xenon</b> gas @ 85 bar.
    }
  }
}

// ---------------------------------------------------------------------------
// Set the container base volume for all containers that have a
// fixed ContainerVolume
// ---------------------------------------------------------------------------

@PART[*]:HAS[#ContainerVolume]:NEEDS[B9PartSwitch,ProfileDefault]:AFTER[KerbalismDefault]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[supplySwitch]]
	{
		baseVolume = #$../ContainerVolume$
	}
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[pressurizedSwitch]]
	{
		baseVolume = #$../ContainerVolume$
	}
}

// ---------------------------------------------------------------------------
// inline prosemian containers have 2 or 4 switches per part. the "full"
// variant has 4 switches (front, back, left, right), the "half" variant
// only has 2 (left, right) but has 2 bay doors with some empty space.
// every section (front, back, left, right) can contain one of:
// - a tank
// - a converter
// - nothing (empty)
//
// depending on the selection, the tank volume changes. 3 tanks
// and one converter have a higher tank volume than 2 tanks and 2 converters.
//
// setup the section switches for the full variant
// ---------------------------------------------------------------------------

@PART[kerbalism-container-inline-prosemian-full-*]:NEEDS[B9PartSwitch,ProfileDefault]:AFTER[KerbalismDefault]
{
	MODULE
	{
		name = ModuleB9PartSwitch
		switcherDescription = Left
		moduleID = meshSwitchLeft
		affectDragCubes = false
		affectFARVoxels = false
		parentID = supplySwitch

		TankTransform = Side_tanksL
		GeneratorATransform = GeneratorL
		GeneratorBTransform = Gen-B-L
		GeneratorCTransform = Gen-C-L
		ConverterAddedMass = #$../ConverterAddedMass$
		ConverterAddedCost = #$../ConverterAddedCost$
		TankVolume = #$../TankVolume$
		TankAddedMass = #$../TankAddedMass$
		TankAddedCost = #$../TankAddedCost$
	}

	MODULE
	{
		name = ModuleB9PartSwitch
		switcherDescription = Front
		moduleID = meshSwitchFront
		affectDragCubes = false
		affectFARVoxels = false
		parentID = supplySwitch

		TankTransform = Side_tanksF
		GeneratorATransform = GeneratorF
		GeneratorBTransform = Gen-B-F
		GeneratorCTransform = Gen-C-F
		ConverterAddedMass = #$../ConverterAddedMass$
		ConverterAddedCost = #$../ConverterAddedCost$
		TankVolume = #$../TankVolume$
		TankAddedMass = #$../TankAddedMass$
		TankAddedCost = #$../TankAddedCost$
	}

	MODULE
	{
		name = ModuleB9PartSwitch
		switcherDescription = Right
		moduleID = meshSwitchRight
		affectDragCubes = false
		affectFARVoxels = false
		parentID = supplySwitch

		TankTransform = Side_tanksR
		GeneratorATransform = GeneratorR
		GeneratorBTransform = Gen-B-R
		GeneratorCTransform = Gen-C-R
		ConverterAddedMass = #$../ConverterAddedMass$
		ConverterAddedCost = #$../ConverterAddedCost$
		TankVolume = #$../TankVolume$
		TankAddedMass = #$../TankAddedMass$
		TankAddedCost = #$../TankAddedCost$
	}

	MODULE
	{
		name = ModuleB9PartSwitch
		switcherDescription = Back
		moduleID = meshSwitchBack
		affectDragCubes = false
		affectFARVoxels = false
		parentID = supplySwitch

		TankTransform = Side_tanksB
		GeneratorATransform = GeneratorB
		GeneratorBTransform = Gen-B-B
		GeneratorCTransform = Gen-C-B
		ConverterAddedMass = #$../ConverterAddedMass$
		ConverterAddedCost = #$../ConverterAddedCost$
		TankVolume = #$../TankVolume$
		TankAddedMass = #$../TankAddedMass$
		TankAddedCost = #$../TankAddedCost$
	}

	MODULE
	{
		name = ModuleKsmProcessController
		id = GeneratorF
		capacity = #$../ConverterCapacity$
	}
	MODULE
	{
		name = ModuleKsmProcessController
		id = GeneratorB
		capacity = #$../ConverterCapacity$
	}
	MODULE
	{
		name = ModuleKsmProcessController
		id = GeneratorR
		capacity = #$../ConverterCapacity$
	}
	MODULE
	{
		name = ModuleKsmProcessController
		id = GeneratorL
		capacity = #$../ConverterCapacity$
	}
}

// ---------------------------------------------------------------------------
// setup the section switches for the half variant (with bay)
// ---------------------------------------------------------------------------

@PART[kerbalism-container-inline-prosemian-half-*]:NEEDS[B9PartSwitch,ProfileDefault]:AFTER[KerbalismDefault]
{
	MODULE
	{
		name = ModuleB9PartSwitch
		switcherDescription = Left
		moduleID = meshSwitchLeft
		affectDragCubes = false
		affectFARVoxels = false
		parentID = supplySwitch

		TankTransform = Side_tanksL
		GeneratorATransform = GeneratorL
		GeneratorBTransform = Gen-B-L
		GeneratorCTransform = Gen-C-L
		ConverterAddedMass = #$../ConverterAddedMass$
		ConverterAddedCost = #$../ConverterAddedCost$
		TankVolume = #$../TankVolume$
		TankAddedMass = #$../TankAddedMass$
		TankAddedCost = #$../TankAddedCost$
	}

	MODULE
	{
		name = ModuleB9PartSwitch
		switcherDescription = Right
		moduleID = meshSwitchRight
		affectDragCubes = false
		affectFARVoxels = false
		parentID = supplySwitch

		TankTransform = Side_tanksR
		GeneratorATransform = GeneratorR
		GeneratorBTransform = Gen-B-R
		GeneratorCTransform = Gen-C-R
		ConverterAddedMass = #$../ConverterAddedMass$
		ConverterAddedCost = #$../ConverterAddedCost$
		TankVolume = #$../TankVolume$
		TankAddedMass = #$../TankAddedMass$
		TankAddedCost = #$../TankAddedCost$
	}

	MODULE
	{
		name = ModuleKsmProcessController
		id = GeneratorR
		capacity = #$../ConverterCapacity$
	}
	MODULE
	{
		name = ModuleKsmProcessController
		id = GeneratorL
		capacity = #$../ConverterCapacity$
	}
}

// ---------------------------------------------------------------------------
// use MM magic to add the same subtypes to all the section switches
// that we defined above
// ---------------------------------------------------------------------------

@PART[kerbalism-container-inline-prosemian-*]:NEEDS[B9PartSwitch,ProfileDefault]:AFTER[KerbalismDefault]
{
	@MODULE[ModuleB9PartSwitch]:HAS[#TankTransform],*
	{
		SUBTYPE
		{
			name = tank
			title = #kerbalism-part-tank // Tank
			primaryColor = white
			transform = #$../TankTransform$
			volumeAddedToParent = #$../TankVolume$
			addedMass = #$../TankAddedMass$
			addedCost = #$../TankAddedCost$
			MODULE
			{
				IDENTIFIER {
					name = ModuleKsmProcessController
					id = #$../../../GeneratorATransform$
				}
				DATA {
					resource =
					title =
				}
			}
		}
		SUBTYPE
		{
			name = empty
			title = #kerbalism-part-empty // Empty
			primaryColor = KSPNeutralUIGrey
			MODULE
			{
				IDENTIFIER {
					name = ModuleKsmProcessController
					id = #$../../../GeneratorATransform$
				}
				DATA {
					resource =
					title =
				}
			}
		}
		SUBTYPE
		{
			name = _Scrubber
			title = #KERBALISM_Scrubber_title
			descriptionSummary = #KERBALISM_Scrubber_desc
			primaryColor = LightMauve
			secondaryColor = AquaBlue
			transform = #$../GeneratorCTransform$
			addedMass = #$../ConverterAddedMass$
			addedCost = #$../ConverterAddedCost$
			MODULE
			{
				IDENTIFIER {
					name = ModuleKsmProcessController
					id = #$../../../GeneratorATransform$
				}
				DATA {
					resource = #$../../name$
					title = #$../../title$
					running = true
				}
			}
		}
		SUBTYPE
		{
			name = _PressureControl
			title = #KERBALISM_PressureControl_title
			descriptionSummary = #KERBALISM_PressureControl_desc
			primaryColor = AlmostBlack
			secondaryColor = AquaBlue
			transform = #$../GeneratorBTransform$
			addedMass = #$../ConverterAddedMass$
			addedCost = #$../ConverterAddedCost$
			MODULE
			{
				IDENTIFIER {
					name = ModuleKsmProcessController
					id = #$../../../GeneratorATransform$
				}
				DATA {
					resource = #$../../name$
					title = #$../../title$
					running = true
				}
			}
		}
		SUBTYPE
		{
			name = _WaterRecycler
			title = #KERBALISM_WaterRecycler_title
			descriptionSummary = #KERBALISM_WaterRecycler_desc
			primaryColor = EggShell
			secondaryColor = Azure
			transform = #$../GeneratorATransform$
			addedMass = #$../ConverterAddedMass$
			addedCost = #$../ConverterAddedCost$
			MODULE
			{
				IDENTIFIER {
					name = ModuleKsmProcessController
					id = #$../../../GeneratorATransform$
				}
				DATA {
					resource = #$../../name$
					title = #$../../title$
					running = true
				}
			}
		}
		SUBTYPE
		{
			name = _WasteProcessor
			title = #KERBALISM_WasteProcessor_title
			descriptionSummary = #KERBALISM_WasteProcessor_desc
			primaryColor = BabyShitBrown
			transform = #$../GeneratorCTransform$
			addedMass = #$../ConverterAddedMass$
			addedCost = #$../ConverterAddedCost$
			MODULE
			{
				IDENTIFIER {
					name = ModuleKsmProcessController
					id = #$../../../GeneratorATransform$
				}
				DATA {
					resource = #$../../name$
					title = #$../../title$
					running = true
				}
			}
		}
		SUBTYPE
		{
			name = _MonopropFuelCell
			title = #KERBALISM_MonopropO2FuelCell_title
			descriptionSummary = #KERBALISM_MonopropO2FuelCell_desc2
			primaryColor = ResourceColorMonoPropellant
			secondaryColor = ResourceColorElectricChargePrimary
			transform = #$../GeneratorBTransform$
			addedMass = #$../ConverterAddedMass$
			addedCost = #$../ConverterAddedCost$
			MODULE
			{
				IDENTIFIER {
					name = ModuleKsmProcessController
					id = #$../../../GeneratorATransform$
				}
				DATA {
					resource = #$../../name$
					title = #$../../title$
					running = false
				}
			}
		}
	}
}
