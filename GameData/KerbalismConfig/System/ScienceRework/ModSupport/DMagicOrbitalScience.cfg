// Rewritten from scratch - Gotmachine - 10-2019 :
// Removed the patching hell, things are now ordered 
// Restored some experiments to their vanilla module and behavior : 
// - ASERT (asteroid experiment with some specific gameplay requirements)
// - Anomalous Signal Sensor (special feature : find anomalies)
// - ExoKerbol Core Drill (surface sample)
// - Surface Ablation Laser Light Imager (surface + asteroid data)
// - Seismic Sensor Pod / Impact Hammer (surface experiment with specific features)
// - XRD Surface Analyzer (surface + asteroid data)
// Rationale : those experiments either have specific constraints or features, 
// and most of them make sense as a instant experiments. 
// Also, we are missing a way to handle some of their animations and ground surface checks.
// For the patched experiments, major changes compared to previous support :
// - Removed all configurable DMOS experiments that were on the stock scanner
// - the Magnetometer and RPWS antenna now use the custom radiation biomes
// - the Solar Particle Collector is a sample again, with a much higher science value than before
// - Dynamic Albedo of Neutrons surface experiment now require to be moving over the surface (so rover only)
// - The SIGINT and RECON experiments will generate their vanilla north/sud hemisphere subjects
// - These changes should fix most issues we had previously with undoable DMOS contracts
// - Fixed some animations, rebalanced some data sizes and durations
// Size consideration: a mid-game rove mate has 12 MB storage, experiments should more or less fit in there.
// Note : we patch all modules with the DM* wildcard with a matching experimentID in order to target both DMOS
// DMModuleScienceAnimate and other DM modules like the standalone DMModuleScienceAnimateGeneric, in order to
// alos patch parts from other mods that uses the DMOS experiments (US2, COATL ProbesPlus...)

// =========================================================
// DMOS "Probe science" folder
// =========================================================

// =========================================================
// Asteroid Sounding Experiment by Radiowave Transmission - part : dmASERT / module : DMAsteroidScanner / expID : dmAsteroidScan
// =========================================================
// UNPATCHED
// The ASERT is an asteroid-only experiment used to study the interior composition of asteroids. 
// It must be paired with a second module placed on the opposite side of an asteroid. 
// When two modules are properly positioned the experiment can be conducted with the science amount 
// dependent on how much of the asteroid the signal passed through.

@EXPERIMENT_DEFINITION:HAS[#id[dmAsteroidScan]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@dataScale = 30 // size in Mb
	@dataScale /= #$baseValue$
}

// =========================================================
// GORESat - part : dmGoreSat - module : DMModuleScienceAnimate
// =========================================================
// The Global Orbital Radiance Experiment Satellite (GORESat) monitors the total light reflected 
// from a planet's surface across multiple wavelengths using four cavity radiometers. Can only be used from high orbit.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    dmRadiometerScan
    {
      size = 7250
      value = 12
      duration = 453600	// 21 days
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[dmRadiometerScan]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmRadiometerScan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmRadiometerScan/size$
	@dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmRadiometerScan]]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[KerbalismDefault]
{
    MODULE
    {
      name = Experiment
      experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
      anim_deploy = #$../MODULE:HAS[#experimentID,~name[Experiment]]/animationName$
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmRadiometerScan/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmRadiometerScan/duration$
      ec_rate = 3.2
      allow_shrouded = False
      requires = SunAngleMin:5,SunAngleMax:60
    }
    
    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// Multi-Spectral Imaging Platform - part : dmImagingPlatform - module : DMModuleScienceAnimate
// =========================================================
// This multi-spectral imaging platform is used to study the surface and composition of planets. Use only in orbit.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    dmImagingPlatform
    {
			size = 5192
			value = 8
			duration = 302400		// 14 days
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[dmImagingPlatform]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmImagingPlatform/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmImagingPlatform/size$
	@dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmImagingPlatform]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
    MODULE
    {
      name = Experiment
      experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
      anim_deploy = #$../MODULE:HAS[#experimentID,~name[Experiment]]/animationName$
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmImagingPlatform/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmImagingPlatform/duration$
      ec_rate = 0.5
      allow_shrouded = False
    }
    
    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// Magnetometer Boom - part : dmmagBoom - module : DMModuleScienceAnimate + DMMagBoomModule
// =========================================================
// The magnetometer instruments are used to determine the magnitude and direction of planetary magnetic fields. 
// The long boom separates these instruments from any interference caused by magnetic elements in the probe. 
// Use in low to high orbit or on the surface. Not for use during atmospheric flight.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    magScan
    {
			size = 550
			value = 5
			duration = 151200	// 7 kerbin days
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[magScan]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/magScan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/magScan/size$
	@dataScale /= #$baseValue$
  KERBALISM_EXPERIMENT
  {
  	VirtualBiome = NoBiome
		VirtualBiome = InnerBelt
		VirtualBiome = OuterBelt
		VirtualBiome = Magnetosphere
    VirtualBiome = Storm
    // note : not using a single space situation so the DMOS contracts are doable
    Situation = InSpaceLow@VirtualBiomes
    Situation = InSpaceHigh@VirtualBiomes
  }
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[magScan]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
  @description = The magnetometer instruments are used to determine the magnitude and direction of planetary magnetic fields. The long boom separates these instruments from any interference caused by magnetic elements in the probe.

    MODULE
    {
      name = Experiment
      experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
      anim_deploy = #$../MODULE:HAS[#experimentID,~name[Experiment]]/animationName$
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/magScan/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/magScan/duration$
      ec_rate = 0.2
      allow_shrouded = False
    }
    
    !MODULE[DMMagBoomModule] {} // DMOS own radiation fields code, useless for us
    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// RPWS Antenna - part : rpwsAnt - module : DMModuleScienceAnimate
// =========================================================
// The Radio and Plasma Wave Science instrument measures electrostatic and electromagnetic fields generated 
// by the interaction of planetary magnetospheres and the interplanetary plasma medium. 
// Deploy and use while in low to high orbit. Not for use during atmospheric flight or surface deployment.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    rpwsScan
    {
			size = 1800
			value = 9
			duration = 648000 // 30 days
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[rpwsScan]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/rpwsScan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/rpwsScan/size$
	@dataScale /= #$baseValue$
  KERBALISM_EXPERIMENT
  {
  	VirtualBiome = NoBiome
		VirtualBiome = InnerBelt
		VirtualBiome = OuterBelt
		VirtualBiome = Magnetosphere
    VirtualBiome = Storm
    // note : not using a single space situation so the DMOS contracts are doable
    Situation = InSpaceLow@VirtualBiomes
    Situation = InSpaceHigh@VirtualBiomes
  }
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[rpwsScan]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
    MODULE
    {
      name = Experiment
      experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
      anim_deploy = #$../MODULE:HAS[#experimentID,~name[Experiment]]/animationName$
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/rpwsScan/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/rpwsScan/duration$
      ec_rate = 0.3
      allow_shrouded = False
    }
    
    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// Orbital Telescope - part : dmscope - module : DMModuleScienceAnimate
// =========================================================
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    scopeScan
    {
			size = 1100
			value = 8
			duration = 151200	// 7 days
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[scopeScan]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/scopeScan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/scopeScan/size$
	@dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[scopeScan]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
    MODULE
    {
      name = Experiment
      experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
      anim_deploy = #$../MODULE:HAS[#experimentID,~name[Experiment]]/animationName$
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/scopeScan/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/scopeScan/duration$
      ec_rate = 0.05
      allow_shrouded = False
      requires = SunAngleMax:55
    }
    
    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// Soil Moisture Sensor - part : dmSoilMoisture - module : DMSoilMoisture
// =========================================================
// This orbital sensor deploys a large L-band microwave detector comprised of 82 individual antenna elements. 
// It can be used to study the water content of the upper soil layers and the salinity levels of large water features. 
// Can only be used in low orbit. This instrument can also be used as a powerful communications antenna.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    dmSoilMoisture
    {
			size = 81920
			value = 14
			duration = 1944000 // 90 days
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[dmSoilMoisture]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSoilMoisture/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSoilMoisture/size$
	@dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmSoilMoisture]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
    MODULE
    {
      name = Experiment
      experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
      anim_deploy = #$../MODULE:HAS[#experimentID,~name[Experiment]]/animationName$
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSoilMoisture/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSoilMoisture/duration$
      ec_rate = 1.5
      allow_shrouded = False
    }
    
    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// Solar Particle Collector - part : dmSolarCollector - module : DMSolarCollector
// =========================================================
// This instrument is designed to collect and store several samples of solar particles.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    dmSolarParticles
    {
			size = 1000 // sample, 1 slot
			value = 20 // few situations, and it's a sample that require a sun orbit, so quite high value.
			duration = 6480000 	// 300 days
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[dmSolarParticles]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSolarParticles/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSolarParticles/size$
	@dataScale /= #$baseValue$
  
  KERBALISM_EXPERIMENT
	{
    SampleMass = 0.001
    BodyAllowed = Suns
    VirtualBiome = NoBiome
    VirtualBiome = Interstellar
    VirtualBiome = Storm
    Situation = Space@VirtualBiomes
	}
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmSolarParticles]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
    MODULE
    {
      name = Experiment
      experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
      anim_deploy = #$../MODULE:HAS[#experimentID,~name[Experiment]]/animationName$
      anim_loop = #$../MODULE:HAS[#experimentID,~name[Experiment]]/loopingAnim$
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSolarParticles/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSolarParticles/duration$
      ec_rate = 0.0
      allow_shrouded = False
      sample_collecting = True
    }
    
    MODULE
    {
      name = HardDrive
      experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
      sampleCapacity = 2
      fileCapacity = 0
    }
    
    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// DMOS "Rover science" folder
// =========================================================

// =========================================================
// Anomalous Signal Sensor - part : dmAnomScanner / module : DMAnomalyScanner / expid : AnomalyScan
// =========================================================
// UNPATCHED : very specific and quite usefull
// This small sensor is designed to scan for anomalous signals across several regions of the electromagnetic spectrum. 
// You must be within 250m of the signal to obtain science results; use it from further out to obtain an estimate 
// of the range and distance to the signal. For the best results, return the device to the KSC for further study.
@EXPERIMENT_DEFINITION:HAS[#id[AnomalyScan]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@dataScale = 12 // size in Mb
	@dataScale /= #$baseValue$

  KERBALISM_EXPERIMENT
  {
    // vanilla DMOS AnomalyScan uses the SrfLanded and FlyingLow situations, we patch them so they are available in the science archive
    // See https://github.com/DMagic1/Orbital-Science/blob/51cbc3c6def1ed7e02a8bb42f819dac678f61983/Source/Part%20Modules/DMAnomalyScanner.cs#L588
    IsGeneratingSubjects = true
    IgnoreBodyRestrictions = true
    Situation = SrfLanded
    Situation = FlyingLow
  }
}

// =========================================================
// Submersible Oceanography and Bathymetry - part : dmBathymetry - module : DMBathymetry
// =========================================================
// Use this submersible science package to explore the uncharted depths of the oceans. 
// Data can be collected above and below the depth threshold to maximize science gain.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    dmbathymetryscan
    {
			size = 800
			value = 16
			duration = 900	// 15 min.
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[dmbathymetryscan]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmbathymetryscan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmbathymetryscan/size$
	@dataScale /= #$baseValue$
  
  KERBALISM_EXPERIMENT
	{
    SampleMass = 0.02
	}
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmbathymetryscan]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
    @description = Use this submersible science package to explore the uncharted depths of the oceans.
    
    MODULE
    {
      name = Experiment
      experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
      anim_deploy = #$../MODULE:HAS[#experimentID,~name[Experiment]]/animationName$
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmbathymetryscan/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmbathymetryscan/duration$
      ec_rate = 6.0
      allow_shrouded = False
      sample_collecting = True
    }
    
    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// ExoKerbol Core Drill - part : dmbioDrill - module : DMBioDrill
// =========================================================
// SEMI-PATCHED : Using the vanilla module because we don't have a surface check and there is no deploy animation
// and anyway we would do it as a very short experiment
// we only add a small drive to store the samples and change the xmitdatascalar to make it a sample
// The ExoKerbol Core Drill (XKCD) is designed to collect subsurface core samples to search for 
// signs of biological activity on atmospheric planets. Three drill core samples can be stored 
// in the incubation chambers for return. Check drill animator orientation with the preview in the VAB/SPH.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    dmbiodrillscan
    {
			size = 512
			value = 6
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[dmbiodrillscan]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmbiodrillscan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmbiodrillscan/size$
	@dataScale /= #$baseValue$
  
  KERBALISM_EXPERIMENT
	{
    SampleMass = 0.005
    Situation = SrfLanded@Biomes
    BodyRequired = Atmospheric // match the vanilla DMOS requirement
	}
}

@PART[*]:HAS[@MODULE[DMBioDrill]:HAS[#experimentID[dmbiodrillscan]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
    @MODULE[DMBioDrill]
    {
      @xmitDataScalar = 0.0 // make it a sample
    }
    
    MODULE
    {
      name = HardDrive
      sampleCapacity = 1
      dataCapacity = 0
    }
}

// =========================================================
// Dynamic Albedo of Neutrons - part : dmDAN - module : DMModuleScienceAnimate
// =========================================================
// NOTE : made this a (short) rover-only experiment by requiring a surface speed > 1.0
// The Dynamic Albedo of Neutrons instrument scans the upper layers of the surface 
// to detect any hydrogen molecules within, specifically searching for water. Require moving over the surface to acquire data.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    dmNAlbedoScan
    {
			size = 32
			value = 6
			duration = 120
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[dmNAlbedoScan]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
  @title = Dynamic Albedo of Neutrons
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmNAlbedoScan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmNAlbedoScan/size$
	@dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[DM*]:HAS[#experimentID[dmNAlbedoScan]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
    MODULE
    {
      name = Experiment
      experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
      anim_loop = #$../MODULE:HAS[#experimentID,~name[Experiment]]/animationName$
      data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmNAlbedoScan/size$
      @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmNAlbedoScan/duration$
      ec_rate = 4.0
      allow_shrouded = False
      requires = SurfaceSpeedMin:1
    }
    
    !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// Surface Ablation Laser Light Imager - part : dmsurfacelaser - module : DMModuleScienceAnimate - expID = dmlaserblastscan
// =========================================================
// UNPATCHED : can't do the surface contact check + would be near instant anyway  + can be used with asteroids
// Presenting the latest in laser based geological science. This device is capable of vaporizing surface samples 
// to study their composition and expose hidden layers of the surface for further study.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    dmlaserblastscan
    {
			size = 12
			value = 6
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[dmlaserblastscan]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmlaserblastscan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmlaserblastscan/size$
	@dataScale /= #$baseValue$
  KERBALISM_EXPERIMENT
	{
    Situation = SrfLanded@Biomes
	}
}

// =========================================================
// Micro Goo Containment Pod - part : dmRoverGoo
// =========================================================
@PART[dmRoverGoo]:NEEDS[DMagicOrbitalScience,FeatureScience]:AFTER[KerbalismDefault]
{
	@MODULE[Experiment]:HAS[#experiment_id[mysteryGoo]]
	{
    anim_deploy = GooDeploy
    anim_loop = GooSample
		@data_rate /= 4
		@UPGRADES
		{
			@UPGRADE[Goo-Storage-Upgrade]
			{
				%sample_amount = 2
			}
		}
	}
  !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// SC-901 Science Micro - part : dmRoverMat
// =========================================================
@PART[dmRoverMat]:NEEDS[DMagicOrbitalScience,FeatureScience]:AFTER[KerbalismDefault]
{
	@MODULE[Experiment]:HAS[#experiment_id[mobileMaterialsLab]]
	{
    anim_deploy = MatBay
    anim_loop = MatSample
		@data_rate /= 2
		@UPGRADES
		{
			@UPGRADE[MatBay-Storage-Upgrade]
			{
				%sample_amount = 1
			}
		}
	}
  !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// Seismic Sensor Pod / Seismic Impact Hammer (dmSeismicPod/dmSeismicHammer), expid = dmseismicHammer
// =========================================================
// UNPATCHED : quite specific, so don't do much about it.
// We just tweak the data size and limit how many times it can be run (since due to our data system, you could re-run it and get as much data as you want)
// The Seismic Sensor Pod is designed to be used in conjunction with the DMagic Seismic Impact Hammer. 
// Place at least two pods at variable distances away from the impact hammer using the built-in decoupler mechanism 
// (the pod has a very high impact tolerance) or by placing them on a separate vessel.
@EXPERIMENT_DEFINITION:HAS[#id[dmseismicHammer]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@dataScale = 16 // size in Mb
	@dataScale /= #$baseValue$
}

@PART[*]:HAS[@MODULE[DMSeismicSensor]:HAS[#experimentID[dmseismicHammer]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
  @MODULE[DMSeismicSensor]
  {
    %rerunnable = False
    %experimentLimit = 4 // 4 experiments available
    %resetLevel = 2 // resettable by a lvl 2 scientist
  }
}

// =========================================================
// XRD Surface Analyzer - part : dmXRay, module : DMXRayDiffract, expID : dmXRayDiffract
// =========================================================
// UNPATCHED : need a ground contact check + don't make much sense to make it take time + can be used with asteroids
// Just tweaking the data size.
// This instrument collects a small surface sample and determines its exact mineral composition through powder X-Ray diffraction. 
// Because Kerbals don't trust what they can't see the chamber has been filled with a special scintillation gas to allow for easy 
// visibility of the X-Ray beam. The drill must contact the surface to obtain a usable sample; perform adequate tests before launch!
@EXPERIMENT_DEFINITION:HAS[#id[dmXRayDiffract]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@dataScale = 30 // size in Mb
	@dataScale /= #$baseValue$
}

// =========================================================
// DMOS "OversizeScience" folder
// =========================================================

// =========================================================
// Little Brother / Big Brother Surveillance Camera - parts : dmReconSmall/dmReconLarge - module : DMReconScope - expID : dmReconScan
// =========================================================
// This single-camera surveillance telescope features a continuously panning aperture that covers 110 degree bands of the surface. 
// This model features two non-reusable film cannisters and has limited on-board processing capabilities. 
// Use for obtaining detailed photos of the surface or spotting any unusual features. 
// Can be used at up to five times the normal low orbit altitude.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    dmReconScan
    {
			size = 40960
			value = 40
			duration = 2592000 // 120 days
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[dmReconScan]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmReconScan/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmReconScan/size$
	@dataScale /= #$baseValue$
  
  KERBALISM_EXPERIMENT
  {
    // replicate the vanilla DMOS biomes so the DMOS contracts are doable
    VirtualBiome = NorthernHemisphere
    VirtualBiome = SouthernHemisphere
    Situation = Space@VirtualBiomes
  }
}

@PART[*]:HAS[@MODULE[DMReconScope]:HAS[#experimentID[dmReconScan]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
  @description = This camera surveillance telescope features continuously panning aperture that large bands of the surface.
  MODULE
  {
    name = Experiment
    experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
    anim_deploy = #$../MODULE:HAS[#experimentID,~name[Experiment]]/animationName$
    anim_loop = #$../MODULE:HAS[#experimentID,~name[Experiment]]/loopingAnimName$
    data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmReconScan/size$
    @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmReconScan/duration$
    // the small variant has a mass of 1t, while the big one a mass of 3t, we use that to scale data rate and ec rate
    @data_rate *= #$../mass$ 
    ec_rate = 2.5
    @ec_rate *= #$../mass$ 
    allow_shrouded = False
  }
  
  !MODULE:HAS[#experimentID,~name[Experiment]] {}
}

// =========================================================
// Undersize/Oversize Signals Intelligence Satellite - parts : dmSIGINT.Small/dmSIGINT.End - module : DMSIGINT - expID : dmSIGINT
// =========================================================
// A mildly oversized radio signals intelligence dish that can be used for listening in to every imaginable from of communication, 
// discovering radio anomalies on a planet's surface, or just impressing your neighbor. Warning: Dish is FRAGILE; 
// it is NOT for use in the atmosphere; CANNOT be retracted! Can be used at up to five times the normal low orbit altitude. 
// This instrument can also be used as a powerful communications antenna.
@KERBALISM_EXPERIMENT_VALUES:NEEDS[DMagicOrbitalScience,FeatureScience]
{
	%DMagicOrbitalScience
	{
    dmSIGINT
    {
			size = 32584
			value = 25
			duration = 2592000	// 120 days
    }
  }
}

@EXPERIMENT_DEFINITION:HAS[#id[dmSIGINT]]:NEEDS[DMagicOrbitalScience,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@baseValue = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSIGINT/value$
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSIGINT/size$
	@dataScale /= #$baseValue$
  
  KERBALISM_EXPERIMENT
  {
    // replicate the vanilla DMOS biomes so the DMOS contracts are doable
    VirtualBiome = NorthernHemisphere
    VirtualBiome = SouthernHemisphere
    Situation = Space@VirtualBiomes
  }
}

@PART[*]:HAS[@MODULE[DMSIGINT]:HAS[#experimentID[dmSIGINT]]]:NEEDS[DMagicOrbitalScience,FeatureScience]
{
  @description = A radio signals intelligence dish that can be used for listening in to every imaginable from of communication, discovering radio anomalies on a planet's surface, or just impressing your neighbor. Warning: Dish is FRAGILE; it is NOT for use in the atmosphere; This instrument can also be used as a powerful communications antenna.
  MODULE
  {
    name = Experiment
    experiment_id = #$../MODULE:HAS[#experimentID,~name[Experiment]]/experimentID$
    anim_deploy = #$../MODULE:HAS[#experimentID,~name[Experiment]]/animationName$
    data_rate = #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSIGINT/size$
    @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/DMagicOrbitalScience/dmSIGINT/duration$
    // the small variant has a mass of 1t, while the big one a mass of 4t, we use that to scale data rate and ec rate
    @data_rate *= #$../mass$ 
    ec_rate = 2.5
    @ec_rate *= #$../mass$ 
    allow_shrouded = False
  }
  
  !MODULE:HAS[#experimentID,~name[Experiment]] {}
}
