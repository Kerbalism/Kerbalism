// Stock-alike Station Parts Expansion

// ============================================================================
// region Comfort providers
// ============================================================================
@PART[sspx-observation-25-1|sspx-cupola-375-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[Kerbalism]
{
  MODULE
  {
    name = Comfort
    desc = The very best space observation experience.
    bonus = panorama
  }

  @tags ^= :$: comfort:
}
// end

// ============================================================================
// region Antennas
// ============================================================================
// After N70 has removed the Signal system on Kerbalism 1.4.X, this is no longer necessary.
// end

// ============================================================================
// region Habitats
// by schrema
// ============================================================================
@PART[sspx-airlock-25-1]:NEEDS[StationPartsExpansionRedux,FeatureHabitat]:AFTER[Kerbalism]
{
	%MODULE[Habitat]
	{
		%name = Habitat
		%volume = 4.9
		%surface = 7.8
	}
}
@PART[sspx-observation-25-1]:NEEDS[StationPartsExpansionRedux,FeatureHabitat]:AFTER[Kerbalism]
{
	%MODULE[Habitat]
	{
		%name = Habitat
		%volume = 25.98
		%surface = 32.42
	}
}
@PART[sspx-habitation-375-*]:NEEDS[StationPartsExpansionRedux,FeatureHabitat]:AFTER[Kerbalism]
{
	%MODULE[Habitat]
	{
		%name = Habitat
		%volume = 22.08
		%surface = 23.56
	}
}
@PART[sspx-habitation-25-*]:NEEDS[StationPartsExpansionRedux,FeatureHabitat]:AFTER[Kerbalism]
{
	%MODULE[Habitat]
	{
		%name = Habitat
		%volume = 19.63
		%surface = 36.32
	}
}
@PART[sspx-airlock-125-1]:NEEDS[StationPartsExpansionRedux,FeatureHabitat]:AFTER[Kerbalism]
{
	%MODULE[Habitat]
	{
		%name = Habitat
		%volume = 0.92
		%surface = 4.17
	}
}
@PART[sspx-cupola-375-1]:NEEDS[StationPartsExpansionRedux,FeatureHabitat]:AFTER[Kerbalism]
{
	%MODULE[Habitat]
	{
		%name = Habitat
		%volume = 13.49
		%surface = 18.57
	}
}
@PART[sspx-greenhouse-25-1]:NEEDS[StationPartsExpansionRedux,FeatureHabitat]:AFTER[Kerbalism]
{
	%MODULE[Habitat]
	{
		%name = Habitat
		%volume = 26
		%surface = 15
	}
}
@PART[sspx-greenhouse-375-1]:NEEDS[StationPartsExpansionRedux,FeatureHabitat]:AFTER[Kerbalism]
{
	%MODULE[Habitat]
	{
		%name = Habitat
		%volume = 25
		%surface = 15.5
	}
}
@PART[sspx-aquaculture-375-1]:NEEDS[StationPartsExpansionRedux,FeatureHabitat]:AFTER[Kerbalism]
{
	%MODULE[Habitat]
	{
		%name = Habitat
		%volume = 18
		%surface = 8
	}
}
// end

// Stock-alike Station Parts Expansion Redux
// ============================================================================
// region Habitat (Inflatable)
// ============================================================================
@PART[sspx-inflatable-hab*]:NEEDS[StationPartsExpansionRedux,FeatureHabitat]:AFTER[Kerbalism]
{
  // Kerbalism forces the habitat to be inflated if kerbals are inside
  @CrewCapacity = #$MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$

  MODULE
  {
    name = ProcessController
    resource = _Scrubber
    title = Scrubber
    capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
    running = true
  }

  MODULE
  {
    name = ProcessController
    resource = _PressureControl
    title = Pressure control
    capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
    running = true
  }

  RESOURCE
  {
    name = Nitrogen
    amount = 10000
    maxAmount = 10000
  }

  MODULE
  {
    name = Habitat
    inflate = Expand
    state = disabled
    animBackwards = True
  }

  MODULE:NEEDS[FeatureReliability]
  {
    name = Reliability
    type = Comfort
    title = Treadmill
    repair = Engineer
    mtbf = 36288000 // 4y
    extra_cost = 0.25
    extra_mass = 0.05
  }

  @MODULE[ProcessController],*
  {
    @capacity *= 1.67
  }

  !MODULE[ModuleDeployableHabitat] {} // Functionality is replaced by ModuleHabitat
}
// end

// ============================================================================
// region Gravity Ring
// ============================================================================
@PART[sspx-inflatable-centrifuge-125-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[Kerbalism]
{
  // Kerbalism forces the habitat to be inflated if kerbals are inside
  @CrewCapacity = #$MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$

  MODULE
  {
    name = Habitat
    state = disabled
    volume = 70
    surface = 40
  }

  MODULE
  {
    name = GravityRing
    ec_rate = 2.5
    animBackwards = True
    deploy = Expand
    rotate = SpinCenter
    deployed = False
    rotateIsTransform = True
  }

  !MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
}

@PART[sspx-inflatable-centrifuge-125-2]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[Kerbalism]
{
  // Kerbalism forces the habitat to be inflated if kerbals are inside
  @CrewCapacity = #$MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$

  MODULE
  {
    name = Habitat
    state = disabled
    volume = 35
    surface = 20
  }

  MODULE
  {
    name = GravityRing
    ec_rate = 2.5
    animBackwards = True
    deploy = Expand
    rotate = CompactSpinCentre
    deployed = False
    rotateIsTransform = True
  }

  !MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
}

@PART[sspx-inflatable-centrifuge-25-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[Kerbalism]
{
  // Kerbalism forces the habitat to be inflated if kerbals are inside
  @CrewCapacity = #$MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$

  MODULE
  {
    name = Habitat
    state = disabled
    volume = 80
    surface = 65
  }

  MODULE
  {
    name = GravityRing
    ec_rate = 2.5
    animBackwards = True
    deploy = Expand
    rotate = B_Rotation
    deployed = False
    rotateIsTransform = True
  }

  !MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
}

@PART[sspx-expandable-centrifuge-375-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[Kerbalism]
{
  // Kerbalism forces the habitat to be inflated if kerbals are inside
  @CrewCapacity = #$MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$

  MODULE
  {
    name = Habitat
    state = disabled
    inflatableUsingRigidWalls = True
    volume = 250
    surface = 100
  }

  MODULE
  {
    name = GravityRing
    ec_rate = 2.5
    animBackwards = True
    deploy = CentrifugeCollapse
    rotate = B_Center
    deployed = False
    rotateIsTransform = True
  }

  MODULE
  {
    name = ProcessController
    resource = _PressureControl
    title = Pressure control
    capacity = #$../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
    running = true
  }

  @MODULE[ProcessController],*
  {
    @capacity *= 1.67
  }

  RESOURCE
  {
    name = Nitrogen
    amount = 10000
    maxAmount = 10000
  }

  !MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
}

@PART[sspx-expandable-centrifuge-375-2]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[Kerbalism]
{
  // Kerbalism forces the habitat to be inflated if kerbals are inside
  @CrewCapacity = #$MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$

  MODULE
  {
    name = Habitat
    state = disabled
    inflatableUsingRigidWalls = True
    volume = 135
    surface = 70
  }

  MODULE
  {
    name = GravityRing
    ec_rate = 2.5
    animBackwards = True
    deploy = Retract
    rotate = SpinCenter
    deployed = False
    rotateIsTransform = True
  }

  MODULE
  {
    name = ProcessController
    resource = _PressureControl
    title = Pressure control
    capacity = #$../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
    running = true
  }

  @MODULE[ProcessController],*
  {
    @capacity *= 1.67
  }

  RESOURCE
  {
    name = Nitrogen
    amount = 10000
    maxAmount = 10000
  }

  !MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
}
// end

// ============================================================================
// region Comfort providers
// ============================================================================
@PART[sspx-observation-25-1|sspx-cupola-125-1|sspx-cupola-375-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[Kerbalism]
{
  MODULE:NEEDS[FeatureComfort]
  {
    name = Comfort
    desc = The very best space observation experience.
    bonus = panorama
  }

  @tags ^= :$: comfort:
}

@PART[sspx-habitation-375-1|sspx-habitation-375-2|sspx-habitation-375-3]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[Kerbalism]
{
  MODULE:NEEDS[FeatureComfort]
  {
    name = Comfort
    desc = It has included a rotation system that simulates gravity.. The crew will love it.
    bonus = exercise
  }

  MODULE:NEEDS[FeatureReliability]
  {
    name = Reliability
    type = Comfort
    title = Treadmill
    repair = Engineer
    mtbf = 36288000 // 4y
    extra_cost = 0.25
    extra_mass = 0.05
  }
  @tags ^= :$: comfort:
}

@PART[sspx-inflatable-hab-25-1|sspx-inflatable-hab-25-2]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[Kerbalism]
{
  MODULE:NEEDS[FeatureComfort]
  {
    name = Comfort
    desc = A treadmill designed to permit exercise in zero-g is included. The crew will love it.
    bonus = exercise
  }
}
// end

// ============================================================================
// region Recyclers
// ============================================================================
@PART[sspx-utility-125-1]:NEEDS[StationPartsExpansionRedux,ProfileDefault,FeatureRadiation]:AFTER[Kerbalism]
{
  // since this part contains an active shield, it needs a big NERF:
  // available only together with kerbalisms active shield
  // pricing adjusted, the part was way too cheap
  TechRequired = experimentalScience
  entryCost = 65000 
  cost = 15000

  MODULE
  {
    name = Emitter
    radiation = -0.0000005555 // -0.002 rad/h
    toggle = true
    ec_rate = 1.25
    active = e10
  }
}


@PART[sspx-utility-125-1]:NEEDS[StationPartsExpansionRedux,ProfileDefault,FeatureReliability]:AFTER[Kerbalism]
{
  MODULE
  {
    name = Reliability
    type = Emitter
    title = Shield
    repair = Engineer
    mtbf = 72576000 // 8y
    extra_cost = 2.5
    extra_mass = 0.1
  }
}

// end

// ============================================================================
// region Greenhouses
// ============================================================================
@PART[sspx-greenhouse-25-1]:NEEDS[StationPartsExpansionRedux,ProfileDefault]:AFTER[Kerbalism]
{
  MODULE
  {
    name = Greenhouse

    crop_resource = Food                // name of resource produced by harvests
    // Greenhouse is scaled relative to Kerbalism Greenhouse, see comments of that one.
    // This greenhouse is assumed to have a volume of 26 m^3, 10 m^3 habitat on the inside
    // and 16 m^3 food production on the outside. It will therefore support 0.33 Kerbals.
    crop_size = 435.90                  // amount of resource produced by harvests
    crop_rate = 0.00000023148           // growth per second when all conditions apply, a fully grown crop equals value of 1.0
    ec_rate = 1.65                      // EC/s consumed by the lamp at max intensity

    light_tolerance = 400.0             // minimum lighting flux required for growth, in W/m^2
    pressure_tolerance = 0.1            // minimum pressure required for growth, in sea level atmospheres
    radiation_tolerance = 0.000008333   // maximum radiation allowed for growth in rad/s, considered after shielding is applied

    shutters = 25DoorsOpen              // animation to manipulate shutters
    animBackwards = True

    INPUT_RESOURCE
    {
      name = Ammonia
      rate = 0.0015114                  // 15 units required per unit of crop, i.e. 200 days * 3600 seconds per hour * 6 hours * rate == 15 * crop_size
    }

    INPUT_RESOURCE
    {
      name = Water
      rate = 0.00005042                 // 0.5 units required per unit of crop, i.e. 200 days * 3600 seconds per hour * 6 hours * rate == 0.5 * crop_size
    }

    INPUT_RESOURCE
    {
      name = WasteAtmosphere      // Plants work on WasteAtmosphere and replace a scrubber, if not enough WasteAtmosphere exists then CO2 is used
      rate = 0.013333             // Matched to a Kerbals WasteAtmosphere output which is 75% of required CO2 for crops
    }                             // WasteAtmosphere has the same density as CO2

    INPUT_RESOURCE
    {
      name = CarbonDioxide        // Kerbals don't provide enough WasteAtmosphere for their required food production. If excess WasteAtmosphere is
                                  // present then it will be used in place of CO2 injection
      rate = 0.00333319           // Remaining 25% of CO2 required.
    }

    // Note. if there is a deficiency in the amount of WasteAtmosphere needed then the missing amount of WasteAtmosphere will be added to the
    // CarbonDioxide input and Vies Versa if not enough CarbonDioxide is present and there is extra WasteAtmosphere.
    // If there is not enough resources then the plants will suffer.

    OUTPUT_RESOURCE
    {
      name = Oxygen
      rate = 0.018203             // 66% of oxygen required by 1 crew member
    }
  }
  
  RESOURCE
  {
    name = Ammonia
    amount = 4700
    maxAmount = 4700
  }

  RESOURCE
  {
    name = CarbonDioxide
    amount = 45000
    maxAmount = 45000
  }

  // To support pressure control
  @MODULE[Configure]
  {
    @SETUP[Pressure?Control]
    {
	  !RESOURCE[Nitrogen] {}
    }
  }

  RESOURCE
  {
    name = Nitrogen
    amount = 10000
    maxAmount = 10000
  }

  RESOURCE
  {
    name = Water
    amount = 165
    maxAmount = 165
  }

  !MODULE[ModuleAnimateGeneric] {} // Greenhouse handles animation
}


@PART[sspx-greenhouse-375-1]:NEEDS[StationPartsExpansionRedux,ProfileDefault]:AFTER[Kerbalism]
{
  MODULE
  {
    name = Greenhouse

    crop_resource = Food                // name of resource produced by harvests
    // Greenhouse is scaled relative to Kerbalism Greenhouse, see comments of that one.
    // This greenhouse is assumed to have a volume of 25 m^3, 15 m^3 habitat on the inside
    // and 10 m^3 food production on the outside. It will therefore support 0.21 Kerbals.
    crop_size = 275.19                  // amount of resource produced by harvests
    crop_rate = 0.00000023148           // growth per second when all conditions apply, a fully grown crop equals value of 1.0
    ec_rate = 1.04                      // EC/s consumed by the lamp at max intensity

    light_tolerance = 400.0             // minimum lighting flux required for growth, in W/m^2
    pressure_tolerance = 0.1            // minimum pressure required for growth, in sea level atmospheres
    radiation_tolerance = 0.000008333   // maximum radiation allowed for growth in rad/s, considered after shielding is applied

    INPUT_RESOURCE
    {
      name = Ammonia
      rate = 0.0009542                  // 15 units required per unit of crop, i.e. 200 days * 3600 seconds per hour * 6 hours * rate == 15 * crop_size
    }

    INPUT_RESOURCE
    {
      name = Water
      rate = 0.000031834                // 0.5 units required per unit of crop, i.e. 200 days * 3600 seconds per hour * 6 hours * rate == 0.5 * crop_size
    }

    INPUT_RESOURCE
    {
      name = WasteAtmosphere      // Plants work on WasteAtmosphere and replace a scrubber, if not enough WasteAtmosphere exists then CO2 is used
      rate = 0.00841709           // Matched to a Kerbals WasteAtmosphere output which is 75% of required CO2 for crops
    }                             // WasteAtmosphere has the same density as CO2

    INPUT_RESOURCE
    {
      name = CarbonDioxide        // Kerbals don't provide enough WasteAtmosphere for their required food production. If excess WasteAtmosphere is
                                  // present then it will be used in place of CO2 injection
      rate = 0.00210427           // Remaining 25% of CO2 required.
    }

    // Note. if there is a deficiency in the amount of WasteAtmosphere needed then the missing amount of WasteAtmosphere will be added to the
    // CarbonDioxide input and Vies Versa if not enough CarbonDioxide is present and there is extra WasteAtmosphere.
    // If there is not enough resources then the plants will suffer.

    OUTPUT_RESOURCE
    {
      name = Oxygen
      rate = 0.0114912            // 42% of oxygen required by 1 crew member
    }
  }
  
  RESOURCE
  {
    name = Ammonia
    amount = 3000
    maxAmount = 3000
  }

  RESOURCE
  {
    name = CarbonDioxide
    amount = 29000
    maxAmount = 29000
  }

  // To support pressure control
  @MODULE[Configure]
  {
    @SETUP[Pressure?Control]
    {
	  !RESOURCE[Nitrogen] {}
    }
  }

  RESOURCE
  {
    name = Nitrogen
    amount = 10000
    maxAmount = 10000
  }

  RESOURCE
  {
    name = Water
    amount = 105
    maxAmount = 105
  }
}

// ============================================================================
// region Containers
// ============================================================================
@PART[sspx-cargo-container*]:NEEDS[StationPartsExpansionRedux,CommunityResourcePack,!ProfileNone]::AFTER[zzzKerbalism]
{
  @MODULE[ModuleB9PartSwitch]
  {
    SUBTYPE
    {
      name = Food
      tankType = Food
      title = Food
      transform = SnacksDecal
    }
    SUBTYPE
    {
      name = Supplies
      tankType = Supplies
      title = Supplies
      transform = SuppliesDecal
    }
    SUBTYPE
    {
      name = Waste
      tankType = Waste
      title = Waste
      transform = LifeSupportDecal
    }
  }
}
// end
